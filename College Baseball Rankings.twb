<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0108.1039                               -->
<workbook original-version='18.1' source-build='2021.4.3 (20214.22.0108.1039)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='2011 Rank' caption='X Axis' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rank11&quot;'>
        <calculation class='tableau' formula='&quot;Rank11&quot;' />
        <aliases>
          <alias key='&quot;Rank11&quot;' value='2011 Rank' />
          <alias key='&quot;Rank12&quot;' value='2012 Rank' />
          <alias key='&quot;Rank13&quot;' value='2013 Rank' />
          <alias key='&quot;Rank14&quot;' value='2014 Rank' />
          <alias key='&quot;Rank15&quot;' value='2015 Rank' />
          <alias key='&quot;Rank16&quot;' value='2016 Rank' />
          <alias key='&quot;Rank17&quot;' value='2017 Rank' />
          <alias key='&quot;Rank18&quot;' value='2018 Rank' />
          <alias key='&quot;Rank19&quot;' value='2019 Rank' />
        </aliases>
        <members>
          <member alias='2011 Rank' value='&quot;Rank11&quot;' />
          <member alias='2012 Rank' value='&quot;Rank12&quot;' />
          <member alias='2013 Rank' value='&quot;Rank13&quot;' />
          <member alias='2014 Rank' value='&quot;Rank14&quot;' />
          <member alias='2015 Rank' value='&quot;Rank15&quot;' />
          <member alias='2016 Rank' value='&quot;Rank16&quot;' />
          <member alias='2017 Rank' value='&quot;Rank17&quot;' />
          <member alias='2018 Rank' value='&quot;Rank18&quot;' />
          <member alias='2019 Rank' value='&quot;Rank19&quot;' />
        </members>
      </column>
      <column alias='2019 Rank' caption='Y Axis' datatype='string' name='[X Axis (copy)_980095877880918016]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rank19&quot;'>
        <calculation class='tableau' formula='&quot;Rank19&quot;' />
        <aliases>
          <alias key='&quot;Rank11&quot;' value='2011 Rank' />
          <alias key='&quot;Rank12&quot;' value='2012 Rank' />
          <alias key='&quot;Rank13&quot;' value='2013 Rank' />
          <alias key='&quot;Rank14&quot;' value='2014 Rank' />
          <alias key='&quot;Rank15&quot;' value='2015 Rank' />
          <alias key='&quot;Rank16&quot;' value='2016 Rank' />
          <alias key='&quot;Rank17&quot;' value='2017 Rank' />
          <alias key='&quot;Rank18&quot;' value='2018 Rank' />
          <alias key='&quot;Rank19&quot;' value='2019 Rank' />
        </aliases>
        <members>
          <member alias='2011 Rank' value='&quot;Rank11&quot;' />
          <member alias='2012 Rank' value='&quot;Rank12&quot;' />
          <member alias='2013 Rank' value='&quot;Rank13&quot;' />
          <member alias='2014 Rank' value='&quot;Rank14&quot;' />
          <member alias='2015 Rank' value='&quot;Rank15&quot;' />
          <member alias='2016 Rank' value='&quot;Rank16&quot;' />
          <member alias='2017 Rank' value='&quot;Rank17&quot;' />
          <member alias='2018 Rank' value='&quot;Rank18&quot;' />
          <member alias='2019 Rank' value='&quot;Rank19&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='cbase_sql_table' inline='true' name='federated.1vb8km71wmyx141dqezwn1tsi1wv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cbase_sql_table' name='textscan.0fy41hb1pf5bkp1ddt02n044p005'>
            <connection class='textscan' directory='D:/Documents/NSS/Data Viz/Tableau/Projects/College Sports Rankings' filename='cbase_sql_table.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0fy41hb1pf5bkp1ddt02n044p005' name='cbase_sql_table.csv' table='[cbase_sql_table#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='string' name='conference' ordinal='1' />
            <column datatype='real' name='avg_rank_2011' ordinal='2' />
            <column datatype='integer' name='rank11' ordinal='3' />
            <column datatype='real' name='avg_rank_2012' ordinal='4' />
            <column datatype='integer' name='rank12' ordinal='5' />
            <column datatype='real' name='avg_rank_2013' ordinal='6' />
            <column datatype='integer' name='rank13' ordinal='7' />
            <column datatype='real' name='avg_rank_2014' ordinal='8' />
            <column datatype='integer' name='rank14' ordinal='9' />
            <column datatype='real' name='avg_rank_2015' ordinal='10' />
            <column datatype='integer' name='rank15' ordinal='11' />
            <column datatype='real' name='avg_rank_2016' ordinal='12' />
            <column datatype='integer' name='rank16' ordinal='13' />
            <column datatype='real' name='avg_rank_2017' ordinal='14' />
            <column datatype='integer' name='rank17' ordinal='15' />
            <column datatype='real' name='avg_rank_2018' ordinal='16' />
            <column datatype='integer' name='rank18' ordinal='17' />
            <column datatype='real' name='avg_rank_2019' ordinal='18' />
            <column datatype='integer' name='rank19' ordinal='19' />
            <column datatype='real' name='avg_rank_total' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0fy41hb1pf5bkp1ddt02n044p005' name='cbase_sql_table.csv' table='[cbase_sql_table#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='name' ordinal='0' />
            <column datatype='string' name='conference' ordinal='1' />
            <column datatype='real' name='avg_rank_2011' ordinal='2' />
            <column datatype='integer' name='rank11' ordinal='3' />
            <column datatype='real' name='avg_rank_2012' ordinal='4' />
            <column datatype='integer' name='rank12' ordinal='5' />
            <column datatype='real' name='avg_rank_2013' ordinal='6' />
            <column datatype='integer' name='rank13' ordinal='7' />
            <column datatype='real' name='avg_rank_2014' ordinal='8' />
            <column datatype='integer' name='rank14' ordinal='9' />
            <column datatype='real' name='avg_rank_2015' ordinal='10' />
            <column datatype='integer' name='rank15' ordinal='11' />
            <column datatype='real' name='avg_rank_2016' ordinal='12' />
            <column datatype='integer' name='rank16' ordinal='13' />
            <column datatype='real' name='avg_rank_2017' ordinal='14' />
            <column datatype='integer' name='rank17' ordinal='15' />
            <column datatype='real' name='avg_rank_2018' ordinal='16' />
            <column datatype='integer' name='rank18' ordinal='17' />
            <column datatype='real' name='avg_rank_2019' ordinal='18' />
            <column datatype='integer' name='rank19' ordinal='19' />
            <column datatype='real' name='avg_rank_total' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conference</remote-name>
            <remote-type>129</remote-type>
            <local-name>[conference]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>conference</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_rank_2011</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_rank_2011]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>avg_rank_2011</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank11</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rank11]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>rank11</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_rank_2012</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_rank_2012]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>avg_rank_2012</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank12</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rank12]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>rank12</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_rank_2013</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_rank_2013]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>avg_rank_2013</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank13</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rank13]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>rank13</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_rank_2014</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_rank_2014]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>avg_rank_2014</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank14</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rank14]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>rank14</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_rank_2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_rank_2015]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>avg_rank_2015</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rank15]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>rank15</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_rank_2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_rank_2016]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>avg_rank_2016</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank16</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rank16]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>rank16</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_rank_2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_rank_2017]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>avg_rank_2017</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank17</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rank17]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>rank17</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_rank_2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_rank_2018]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>avg_rank_2018</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank18</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rank18]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>rank18</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_rank_2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_rank_2019]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>avg_rank_2019</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank19</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rank19]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>rank19</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_rank_total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_rank_total]</local-name>
            <parent-name>[cbase_sql_table.csv]</parent-name>
            <remote-alias>avg_rank_total</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rank ( X )' datatype='integer' name='[Calculation_980095877881008129]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when &quot;Rank11&quot; then [rank11]&#13;&#10;when &quot;Rank12&quot; then [rank12]&#13;&#10;when &quot;Rank13&quot; then [rank13]&#13;&#10;when &quot;Rank14&quot; then [rank14]&#13;&#10;when &quot;Rank15&quot; then [rank15]&#13;&#10;when &quot;Rank16&quot; then [rank16]&#13;&#10;when &quot;Rank17&quot; then [rank17]&#13;&#10;when &quot;Rank18&quot; then [rank18]&#13;&#10;when &quot;Rank19&quot; then [rank19]&#13;&#10;end' />
      </column>
      <column caption='Rank ( Y )' datatype='integer' name='[Rank ( X ) (copy)_980095877881339906]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='case [Parameters].[X Axis (copy)_980095877880918016]&#13;&#10;when &quot;Rank11&quot; then [rank11]&#13;&#10;when &quot;Rank12&quot; then [rank12]&#13;&#10;when &quot;Rank13&quot; then [rank13]&#13;&#10;when &quot;Rank14&quot; then [rank14]&#13;&#10;when &quot;Rank15&quot; then [rank15]&#13;&#10;when &quot;Rank16&quot; then [rank16]&#13;&#10;when &quot;Rank17&quot; then [rank17]&#13;&#10;when &quot;Rank18&quot; then [rank18]&#13;&#10;when &quot;Rank19&quot; then [rank19]&#13;&#10;end' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='cbase_sql_table.csv' datatype='table' name='[__tableau_internal_object_id__].[cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B]' role='measure' type='quantitative' />
      <column caption='Avg Rank 2011' datatype='real' name='[avg_rank_2011]' role='measure' type='quantitative' />
      <column caption='Avg Rank 2012' datatype='real' name='[avg_rank_2012]' role='measure' type='quantitative' />
      <column caption='Avg Rank 2013' datatype='real' name='[avg_rank_2013]' role='measure' type='quantitative' />
      <column caption='Avg Rank 2014' datatype='real' name='[avg_rank_2014]' role='measure' type='quantitative' />
      <column caption='Avg Rank 2015' datatype='real' name='[avg_rank_2015]' role='measure' type='quantitative' />
      <column caption='Avg Rank 2016' datatype='real' name='[avg_rank_2016]' role='measure' type='quantitative' />
      <column caption='Avg Rank 2017' datatype='real' name='[avg_rank_2017]' role='measure' type='quantitative' />
      <column caption='Avg Rank 2018' datatype='real' name='[avg_rank_2018]' role='measure' type='quantitative' />
      <column caption='Avg Rank 2019' datatype='real' name='[avg_rank_2019]' role='measure' type='quantitative' />
      <column caption='Avg Rank Total' datatype='real' name='[avg_rank_total]' role='measure' type='quantitative' />
      <column caption='Conference' datatype='string' name='[conference]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Rank11' datatype='integer' name='[rank11]' role='measure' type='quantitative' />
      <column caption='Rank12' datatype='integer' name='[rank12]' role='measure' type='quantitative' />
      <column caption='Rank13' datatype='integer' name='[rank13]' role='measure' type='quantitative' />
      <column caption='Rank14' datatype='integer' name='[rank14]' role='measure' type='quantitative' />
      <column caption='Rank15' datatype='integer' name='[rank15]' role='measure' type='quantitative' />
      <column caption='Rank16' datatype='integer' name='[rank16]' role='measure' type='quantitative' />
      <column caption='Rank17' datatype='integer' name='[rank17]' role='measure' type='quantitative' />
      <column caption='Rank18' datatype='integer' name='[rank18]' role='measure' type='quantitative' />
      <column caption='Rank19' datatype='integer' name='[rank19]' role='measure' type='quantitative' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[avg_rank_2011]' derivation='Sum' name='[sum:avg_rank_2011:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_rank_2012]' derivation='Sum' name='[sum:avg_rank_2012:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_rank_2013]' derivation='Sum' name='[sum:avg_rank_2013:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_rank_2014]' derivation='Sum' name='[sum:avg_rank_2014:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_rank_2015]' derivation='Sum' name='[sum:avg_rank_2015:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_rank_2016]' derivation='Sum' name='[sum:avg_rank_2016:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_rank_2017]' derivation='Sum' name='[sum:avg_rank_2017:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_rank_2018]' derivation='Sum' name='[sum:avg_rank_2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_rank_2019]' derivation='Sum' name='[sum:avg_rank_2019:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Name)' hidden='true' name='[Action (Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[name]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ARK LITTLE ROCK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;C MICHIGAN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CS BAKERSFIELD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FL ATLANTIC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HARVARD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KENNESAW&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MARSHALL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MTSU&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NORTHWESTERN LA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PRINCETON&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SE LOUISIANA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;STONY BROOK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;UC SANTA BARBARA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VIRGINIA TECH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AIR FORCE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BOSTON COLLEGE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CLEMSON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E KENTUCKY&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GEORGE MASON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IONA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LOUISIANA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MISSISSIPPI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NIAGARA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PENN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SAM HOUSTON ST&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ST BONAVENTURE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TOWSON&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;UTAH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WILLIAM &amp; MARY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ALCORN ST&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BRYANT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CONNECTICUT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ETSU&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GEORGIA TECH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JACKSONVILLE ST&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LSU&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MONMOUTH NJ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NORTH CAROLINA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PITTSBURGH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SAN FRANCISCO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ST MARY&apos;S CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;UAB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;VANDERBILT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WRIGHT ST&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ARMY&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CANISIUS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DALLAS BAP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FLORIDA INTL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HOLY CROSS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LAFAYETTE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MD E SHORE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;N ILLINOIS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OHIO ST&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RHODE ISLAND&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SF AUSTIN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TENNESSEE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;UMBC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W MICHIGAN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ARK PINE BLUFF&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CAL POLY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CS FULLERTON&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FL GULF COAST&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HAWAII&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KENT&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MARYLAND&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MURRAY ST&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NOTRE DAME&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PURDUE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SE MISSOURI ST&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SUNY ALBANY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UCF&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VMI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;APPALACHIAN ST&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BUCKNELL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;COPPIN ST&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EVANSVILLE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GONZAGA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JAMES MADISON&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MAINE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MOREHEAD ST&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NORTH FLORIDA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PORTLAND&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SAN JOSE ST&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ST PETER&apos;S&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UC DAVIS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VCU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;XAVIER&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BETHUNE-COOKMAN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CINCINNATI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DUKE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GA SOUTHERN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;INDIANA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LONG BEACH ST&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MICHIGAN ST&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NEW MEXICO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OREGON ST&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S ILLINOIS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SOUTHERN MISS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TN MARTIN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UT ARLINGTON&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WI MILWAUKEE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ALABAMA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BOWLING GREEN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;COASTAL CAR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E MICHIGAN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GEORGETOWN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IOWA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LOUISIANA TECH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MISSISSIPPI ST&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NICHOLLS ST&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PENN ST&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SAMFORD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ST JOHN&apos;S&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TROY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UTAH VALLEY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WINTHROP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BAYLOR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CHARLOTTE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DELAWARE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FURMAN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ILLINOIS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LIPSCOMB&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MIAMI OH&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NEBRASKA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ORAL ROBERTS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RUTGERS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SOUTH CAROLINA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TEXAS ST&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UNLV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WASHINGTON ST&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ARIZONA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BUTLER&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CORNELL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;F DICKINSON&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GRAMBLING&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KANSAS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MANHATTAN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MS VALLEY ST&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NORTHEASTERN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PRAIRIE VIEW&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SANTA CLARA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;STANFORD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;UC IRVINE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VILLANOVA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;YALE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AUBURN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CENT ARKANSAS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DARTMOUTH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FLORIDA ST&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HOUSTON&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LAMAR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MEMPHIS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NAVY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OKLAHOMA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RICE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SIENA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TENNESSEE TECH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UNC ASHEVILLE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WAGNER&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AUSTIN PEAY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CENTRAL CONN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DAVIDSON&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FORDHAM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HOUSTON BAP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LEHIGH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MERCER&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NC A&amp;T&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OKLAHOMA ST&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RICHMOND&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SIUE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TEXAS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UNC GREENSBORO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WAKE FOREST&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BELMONT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CHICAGO ST&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DELAWARE ST&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;G WASHINGTON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ILLINOIS ST&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LIU BROOKLYN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MICHIGAN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NEVADA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;OREGON&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S DAKOTA ST&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SOUTH FLORIDA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TEXAS TECH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;USC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WEST VIRGINIA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BINGHAMTON&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CITADEL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E ILLINOIS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GARDNER WEBB&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;INDIANA ST&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LONGWOOD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MINNESOTA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NEW MEXICO ST&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PACIFIC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SACRED HEART&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SOUTHERN UNIV&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TOLEDO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UT SAN ANTONIO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WICHITA ST&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ARKANSAS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CALIFORNIA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CS NORTHRIDGE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FLORIDA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HIGH POINT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KENTUCKY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MASSACHUSETTS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;N COLORADO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;OAKLAND&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;QUINNIPIAC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SEATTLE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TAM C. CHRISTI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;UCLA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W CAROLINA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ARIZONA ST&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BYU&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CREIGHTON&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FAIRFIELD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HARTFORD&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KANSAS ST&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MARIST&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MT ST MARY&apos;S&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NORTHWESTERN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PRESBYTERIAN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SC UPSTATE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;STETSON&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;UC RIVERSIDE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VIRGINIA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;YOUNGSTOWN ST&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ALABAMA A&amp;M&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BRADLEY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;COL CHARLESTON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EAST CAROLINA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GEORGIA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JACKSON ST&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LOUISVILLE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MISSOURI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NJIT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PEPPERDINE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SAN DIEGO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ST JOSEPH&apos;S PA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TULANE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UTRGV&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WKU&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BALL ST&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CHARLESTON SO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DAYTON&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FRESNO ST&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IL CHICAGO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LIBERTY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MIAMI FL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NC STATE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OLD DOMINION&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RIDER&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SOUTH ALABAMA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TEXAS A&amp;M&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UNC WILMINGTON&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WASHINGTON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ARKANSAS ST&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CAMPBELL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CS SACRAMENTO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FLORIDA A&amp;M&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HOFSTRA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LA SALLE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MCNEESE ST&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;N DAKOTA ST&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OHIO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RADFORD&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SETON HALL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TCU&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ULM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W ILLINOIS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ALABAMA ST&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BROWN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;COLUMBIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ELON&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GEORGIA ST&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JACKSONVILLE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LOY MARYMOUNT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MISSOURI ST&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NORFOLK ST&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PFW&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SAN DIEGO ST&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ST LOUIS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TX SOUTHERN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VALPARAISO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WOFFORD&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2011:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2015:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2014:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2019:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2017:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2013:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2016:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2012:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2018:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='2011 Rank' caption='X Axis' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rank11&quot;'>
          <calculation class='tableau' formula='&quot;Rank11&quot;' />
          <aliases>
            <alias key='&quot;Rank11&quot;' value='2011 Rank' />
            <alias key='&quot;Rank12&quot;' value='2012 Rank' />
            <alias key='&quot;Rank13&quot;' value='2013 Rank' />
            <alias key='&quot;Rank14&quot;' value='2014 Rank' />
            <alias key='&quot;Rank15&quot;' value='2015 Rank' />
            <alias key='&quot;Rank16&quot;' value='2016 Rank' />
            <alias key='&quot;Rank17&quot;' value='2017 Rank' />
            <alias key='&quot;Rank18&quot;' value='2018 Rank' />
            <alias key='&quot;Rank19&quot;' value='2019 Rank' />
          </aliases>
        </column>
        <column alias='2019 Rank' caption='Y Axis' datatype='string' name='[X Axis (copy)_980095877880918016]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rank19&quot;'>
          <calculation class='tableau' formula='&quot;Rank19&quot;' />
          <aliases>
            <alias key='&quot;Rank11&quot;' value='2011 Rank' />
            <alias key='&quot;Rank12&quot;' value='2012 Rank' />
            <alias key='&quot;Rank13&quot;' value='2013 Rank' />
            <alias key='&quot;Rank14&quot;' value='2014 Rank' />
            <alias key='&quot;Rank15&quot;' value='2015 Rank' />
            <alias key='&quot;Rank16&quot;' value='2016 Rank' />
            <alias key='&quot;Rank17&quot;' value='2017 Rank' />
            <alias key='&quot;Rank18&quot;' value='2018 Rank' />
            <alias key='&quot;Rank19&quot;' value='2019 Rank' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cbase_sql_table.csv' id='cbase_sql_table.csv_41C705D67A204518BD20F7227AB5E94B'>
            <properties context=''>
              <relation connection='textscan.0fy41hb1pf5bkp1ddt02n044p005' name='cbase_sql_table.csv' table='[cbase_sql_table#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='name' ordinal='0' />
                  <column datatype='string' name='conference' ordinal='1' />
                  <column datatype='real' name='avg_rank_2011' ordinal='2' />
                  <column datatype='integer' name='rank11' ordinal='3' />
                  <column datatype='real' name='avg_rank_2012' ordinal='4' />
                  <column datatype='integer' name='rank12' ordinal='5' />
                  <column datatype='real' name='avg_rank_2013' ordinal='6' />
                  <column datatype='integer' name='rank13' ordinal='7' />
                  <column datatype='real' name='avg_rank_2014' ordinal='8' />
                  <column datatype='integer' name='rank14' ordinal='9' />
                  <column datatype='real' name='avg_rank_2015' ordinal='10' />
                  <column datatype='integer' name='rank15' ordinal='11' />
                  <column datatype='real' name='avg_rank_2016' ordinal='12' />
                  <column datatype='integer' name='rank16' ordinal='13' />
                  <column datatype='real' name='avg_rank_2017' ordinal='14' />
                  <column datatype='integer' name='rank17' ordinal='15' />
                  <column datatype='real' name='avg_rank_2018' ordinal='16' />
                  <column datatype='integer' name='rank18' ordinal='17' />
                  <column datatype='real' name='avg_rank_2019' ordinal='18' />
                  <column datatype='integer' name='rank19' ordinal='19' />
                  <column datatype='real' name='avg_rank_total' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_85903F43ADB04FD58C35A834817BA975]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 1' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='22'>College Baseball Rankings</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontsize='12' italic='true'>(year by year comparison from 2011-2019)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cbase_sql_table' name='federated.1vb8km71wmyx141dqezwn1tsi1wv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2011 Rank' caption='X Axis' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rank11&quot;'>
              <calculation class='tableau' formula='&quot;Rank11&quot;' />
              <aliases>
                <alias key='&quot;Rank11&quot;' value='2011 Rank' />
                <alias key='&quot;Rank12&quot;' value='2012 Rank' />
                <alias key='&quot;Rank13&quot;' value='2013 Rank' />
                <alias key='&quot;Rank14&quot;' value='2014 Rank' />
                <alias key='&quot;Rank15&quot;' value='2015 Rank' />
                <alias key='&quot;Rank16&quot;' value='2016 Rank' />
                <alias key='&quot;Rank17&quot;' value='2017 Rank' />
                <alias key='&quot;Rank18&quot;' value='2018 Rank' />
                <alias key='&quot;Rank19&quot;' value='2019 Rank' />
              </aliases>
            </column>
            <column alias='2019 Rank' caption='Y Axis' datatype='string' name='[X Axis (copy)_980095877880918016]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rank19&quot;'>
              <calculation class='tableau' formula='&quot;Rank19&quot;' />
              <aliases>
                <alias key='&quot;Rank11&quot;' value='2011 Rank' />
                <alias key='&quot;Rank12&quot;' value='2012 Rank' />
                <alias key='&quot;Rank13&quot;' value='2013 Rank' />
                <alias key='&quot;Rank14&quot;' value='2014 Rank' />
                <alias key='&quot;Rank15&quot;' value='2015 Rank' />
                <alias key='&quot;Rank16&quot;' value='2016 Rank' />
                <alias key='&quot;Rank17&quot;' value='2017 Rank' />
                <alias key='&quot;Rank18&quot;' value='2018 Rank' />
                <alias key='&quot;Rank19&quot;' value='2019 Rank' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vb8km71wmyx141dqezwn1tsi1wv'>
            <column caption='Rank ( X )' datatype='integer' name='[Calculation_980095877881008129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[Parameter 1]&#13;&#10;when &quot;Rank11&quot; then [rank11]&#13;&#10;when &quot;Rank12&quot; then [rank12]&#13;&#10;when &quot;Rank13&quot; then [rank13]&#13;&#10;when &quot;Rank14&quot; then [rank14]&#13;&#10;when &quot;Rank15&quot; then [rank15]&#13;&#10;when &quot;Rank16&quot; then [rank16]&#13;&#10;when &quot;Rank17&quot; then [rank17]&#13;&#10;when &quot;Rank18&quot; then [rank18]&#13;&#10;when &quot;Rank19&quot; then [rank19]&#13;&#10;end' />
            </column>
            <column caption='Rank ( Y )' datatype='integer' name='[Rank ( X ) (copy)_980095877881339906]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='case [Parameters].[X Axis (copy)_980095877880918016]&#13;&#10;when &quot;Rank11&quot; then [rank11]&#13;&#10;when &quot;Rank12&quot; then [rank12]&#13;&#10;when &quot;Rank13&quot; then [rank13]&#13;&#10;when &quot;Rank14&quot; then [rank14]&#13;&#10;when &quot;Rank15&quot; then [rank15]&#13;&#10;when &quot;Rank16&quot; then [rank16]&#13;&#10;when &quot;Rank17&quot; then [rank17]&#13;&#10;when &quot;Rank18&quot; then [rank18]&#13;&#10;when &quot;Rank19&quot; then [rank19]&#13;&#10;end' />
            </column>
            <column-instance column='[conference]' derivation='Attribute' name='[attr:conference:nk]' pivot='key' type='nominal' />
            <column caption='Conference' datatype='string' name='[conference]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_980095877881008129]' derivation='None' name='[none:Calculation_980095877881008129:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank ( X ) (copy)_980095877881339906]' derivation='None' name='[none:Rank ( X ) (copy)_980095877881339906:qk]' pivot='key' type='quantitative' />
            <column-instance column='[conference]' derivation='None' name='[none:conference:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column caption='Rank11' datatype='integer' name='[rank11]' role='measure' type='quantitative' />
            <column caption='Rank12' datatype='integer' name='[rank12]' role='measure' type='quantitative' />
            <column caption='Rank13' datatype='integer' name='[rank13]' role='measure' type='quantitative' />
            <column caption='Rank14' datatype='integer' name='[rank14]' role='measure' type='quantitative' />
            <column caption='Rank15' datatype='integer' name='[rank15]' role='measure' type='quantitative' />
            <column caption='Rank16' datatype='integer' name='[rank16]' role='measure' type='quantitative' />
            <column caption='Rank17' datatype='integer' name='[rank17]' role='measure' type='quantitative' />
            <column caption='Rank18' datatype='integer' name='[rank18]' role='measure' type='quantitative' />
            <column caption='Rank19' datatype='integer' name='[rank19]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_980095877881008129]' derivation='Sum' name='[sum:Calculation_980095877881008129:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank ( X ) (copy)_980095877881339906]' derivation='Sum' name='[sum:Rank ( X ) (copy)_980095877881339906:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:Calculation_980095877881008129:qk]' included-values='all' />
          <filter class='quantitative' column='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:Rank ( X ) (copy)_980095877881339906:qk]' included-values='all' />
          <filter class='categorical' column='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:conference:nk]'>
            <groupfilter function='level-members' level='[none:conference:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:name:nk]'>
            <groupfilter function='level-members' level='[none:name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:conference:nk]</column>
            <column>[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:name:nk]</column>
            <column>[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:Calculation_980095877881008129:qk]</column>
            <column>[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:Rank ( X ) (copy)_980095877881339906:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:Rank ( X ) (copy)_980095877881339906:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:Rank ( X ) (copy)_980095877881339906:qk]' scope='rows' value='Rank ( Y )' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:Calculation_980095877881008129:qk]' field-type='quantitative' scope='cols' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='text-format' id='refline1' value='n#,##0;-#,##0' />
            <format attr='text-format' id='refline2' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[attr:conference:nk]' />
              <text column='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:name:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:Calculation_980095877881008129:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' tooltip-type='none' value-column='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:Calculation_980095877881008129:qk]' z-order='1' />
            <reference-line axis-column='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:Rank ( X ) (copy)_980095877881339906:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='value' probability='95' scope='per-table' value-column='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:Rank ( X ) (copy)_980095877881339906:qk]' z-order='2' />
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='bottom' />
                <format attr='wrap' value='auto' />
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='shape' value='circle' />
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:Rank ( X ) (copy)_980095877881339906:qk]</rows>
        <cols>[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:Calculation_980095877881008129:qk]</cols>
      </table>
      <simple-id uuid='{FA3EF169-E079-4137-B9C2-4400CB50D8A1}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='cbase_sql_table' name='federated.1vb8km71wmyx141dqezwn1tsi1wv' />
          </datasources>
          <datasource-dependencies datasource='federated.1vb8km71wmyx141dqezwn1tsi1wv'>
            <column caption='Avg Rank 2011' datatype='real' name='[avg_rank_2011]' role='measure' type='quantitative' />
            <column caption='Avg Rank 2012' datatype='real' name='[avg_rank_2012]' role='measure' type='quantitative' />
            <column caption='Avg Rank 2013' datatype='real' name='[avg_rank_2013]' role='measure' type='quantitative' />
            <column caption='Avg Rank 2014' datatype='real' name='[avg_rank_2014]' role='measure' type='quantitative' />
            <column caption='Avg Rank 2015' datatype='real' name='[avg_rank_2015]' role='measure' type='quantitative' />
            <column caption='Avg Rank 2016' datatype='real' name='[avg_rank_2016]' role='measure' type='quantitative' />
            <column caption='Avg Rank 2017' datatype='real' name='[avg_rank_2017]' role='measure' type='quantitative' />
            <column caption='Avg Rank 2018' datatype='real' name='[avg_rank_2018]' role='measure' type='quantitative' />
            <column caption='Avg Rank 2019' datatype='real' name='[avg_rank_2019]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[avg_rank_2011]' derivation='Sum' name='[sum:avg_rank_2011:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_rank_2012]' derivation='Sum' name='[sum:avg_rank_2012:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_rank_2013]' derivation='Sum' name='[sum:avg_rank_2013:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_rank_2014]' derivation='Sum' name='[sum:avg_rank_2014:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_rank_2015]' derivation='Sum' name='[sum:avg_rank_2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_rank_2016]' derivation='Sum' name='[sum:avg_rank_2016:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_rank_2017]' derivation='Sum' name='[sum:avg_rank_2017:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_rank_2018]' derivation='Sum' name='[sum:avg_rank_2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_rank_2019]' derivation='Sum' name='[sum:avg_rank_2019:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2011:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2012:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2013:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2014:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2015:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2016:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2017:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vb8km71wmyx141dqezwn1tsi1wv].[sum:avg_rank_2019:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vb8km71wmyx141dqezwn1tsi1wv].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[Multiple Values]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vb8km71wmyx141dqezwn1tsi1wv].[Multiple Values]</rows>
        <cols>([federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:name:nk] / [federated.1vb8km71wmyx141dqezwn1tsi1wv].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{F8F46320-133B-488D-9555-E39A18797279}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='980' maxwidth='1820' minheight='980' minwidth='1820' preset-index='17' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='cbase_sql_table' name='federated.1vb8km71wmyx141dqezwn1tsi1wv' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='2011 Rank' caption='X Axis' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rank11&quot;'>
          <calculation class='tableau' formula='&quot;Rank11&quot;' />
          <aliases>
            <alias key='&quot;Rank11&quot;' value='2011 Rank' />
            <alias key='&quot;Rank12&quot;' value='2012 Rank' />
            <alias key='&quot;Rank13&quot;' value='2013 Rank' />
            <alias key='&quot;Rank14&quot;' value='2014 Rank' />
            <alias key='&quot;Rank15&quot;' value='2015 Rank' />
            <alias key='&quot;Rank16&quot;' value='2016 Rank' />
            <alias key='&quot;Rank17&quot;' value='2017 Rank' />
            <alias key='&quot;Rank18&quot;' value='2018 Rank' />
            <alias key='&quot;Rank19&quot;' value='2019 Rank' />
          </aliases>
          <members>
            <member alias='2011 Rank' value='&quot;Rank11&quot;' />
            <member alias='2012 Rank' value='&quot;Rank12&quot;' />
            <member alias='2013 Rank' value='&quot;Rank13&quot;' />
            <member alias='2014 Rank' value='&quot;Rank14&quot;' />
            <member alias='2015 Rank' value='&quot;Rank15&quot;' />
            <member alias='2016 Rank' value='&quot;Rank16&quot;' />
            <member alias='2017 Rank' value='&quot;Rank17&quot;' />
            <member alias='2018 Rank' value='&quot;Rank18&quot;' />
            <member alias='2019 Rank' value='&quot;Rank19&quot;' />
          </members>
        </column>
        <column alias='2019 Rank' caption='Y Axis' datatype='string' name='[X Axis (copy)_980095877880918016]' param-domain-type='list' role='measure' type='nominal' value='&quot;Rank19&quot;'>
          <calculation class='tableau' formula='&quot;Rank19&quot;' />
          <aliases>
            <alias key='&quot;Rank11&quot;' value='2011 Rank' />
            <alias key='&quot;Rank12&quot;' value='2012 Rank' />
            <alias key='&quot;Rank13&quot;' value='2013 Rank' />
            <alias key='&quot;Rank14&quot;' value='2014 Rank' />
            <alias key='&quot;Rank15&quot;' value='2015 Rank' />
            <alias key='&quot;Rank16&quot;' value='2016 Rank' />
            <alias key='&quot;Rank17&quot;' value='2017 Rank' />
            <alias key='&quot;Rank18&quot;' value='2018 Rank' />
            <alias key='&quot;Rank19&quot;' value='2019 Rank' />
          </aliases>
          <members>
            <member alias='2011 Rank' value='&quot;Rank11&quot;' />
            <member alias='2012 Rank' value='&quot;Rank12&quot;' />
            <member alias='2013 Rank' value='&quot;Rank13&quot;' />
            <member alias='2014 Rank' value='&quot;Rank14&quot;' />
            <member alias='2015 Rank' value='&quot;Rank15&quot;' />
            <member alias='2016 Rank' value='&quot;Rank16&quot;' />
            <member alias='2017 Rank' value='&quot;Rank17&quot;' />
            <member alias='2018 Rank' value='&quot;Rank18&quot;' />
            <member alias='2019 Rank' value='&quot;Rank19&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1vb8km71wmyx141dqezwn1tsi1wv'>
        <column caption='Conference' datatype='string' name='[conference]' role='dimension' type='nominal' />
        <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
        <column-instance column='[conference]' derivation='None' name='[none:conference:nk]' pivot='key' type='nominal' />
        <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98368' id='7' param='horz' type-v2='layout-flow' w='99120' x='440' y='816'>
            <zone h='98368' id='5' type-v2='layout-basic' w='99120' x='440' y='816'>
              <zone h='98368' id='3' name='Sheet 1' w='99120' x='440' y='816'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6429' id='10' mode='checkdropdown' name='Sheet 1' param='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:name:nk]' type-v2='filter' values='relevant' w='6484' x='6813' y='11837' />
        <zone h='6531' id='11' mode='dropdown' name='Sheet 1' param='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:conference:nk]' type-v2='filter' w='6484' x='6813' y='7755' />
        <zone h='5510' id='12' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='6429' x='6868' y='15918' />
        <zone h='5510' id='13' mode='compact' param='[Parameters].[X Axis (copy)_980095877880918016]' type-v2='paramctrl' w='6429' x='6868' y='20000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98368' id='14' param='vert' type-v2='layout-flow' w='99120' x='440' y='816'>
                <zone h='6429' id='10' mode='checkdropdown' name='Sheet 1' param='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:name:nk]' type-v2='filter' values='relevant' w='6484' x='6813' y='11837'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6531' id='11' mode='dropdown' name='Sheet 1' param='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:conference:nk]' type-v2='filter' w='6484' x='6813' y='7755'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98368' id='3' is-fixed='true' name='Sheet 1' w='99120' x='440' y='816'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5510' id='12' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='6429' x='6868' y='15918'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5510' id='13' mode='compact' param='[Parameters].[X Axis (copy)_980095877880918016]' type-v2='paramctrl' w='6429' x='6868' y='20000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{98708758-7612-49C7-B947-F7E962044D50}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:Rank ( X ) (copy)_980095877881339906:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:Calculation_980095877881008129:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='checkdropdown' param='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:name:nk]' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:conference:nk]' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[X Axis (copy)_980095877880918016]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:Calculation_980095877881008129:qk]</field>
            <field>[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:Rank ( X ) (copy)_980095877881339906:qk]</field>
            <field>[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:conference:nk]</field>
            <field>[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{279119F5-2CC0-4A82-9C92-867AB7234A82}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vb8km71wmyx141dqezwn1tsi1wv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vb8km71wmyx141dqezwn1tsi1wv].[:Measure Names]</field>
            <field>[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:avg_rank_total:qk]</field>
            <field>[federated.1vb8km71wmyx141dqezwn1tsi1wv].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A49C8A27-12E7-4587-B121-47453400B63E}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{C9422142-1239-46F1-87C5-0CF0160426BE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      eY2KBYDN9l1RhtraxxOYLBYL3d3Lm1Z2u3233dvzSCSsqab++b0ZXjnUSD6f5/N7M7xVgjrb
      XqPcp/d6POm8xpN49vvmfcLqU1h/evbQY1KArQ4jX/bPIOQFTvU0VsTHC6e7uDk0x4VNVqAv
      9+n9JMoJnOcjyWUfsHIKq8GqZ94ffez9NoeRPzrZztsvtu16oYpoNMq1a9eQF7K82lNLlVQg
      Ho+XfZ06sx6ZVLKr9RvEHmAd1quhVWlWTmHJpNInLhHX6FW7tkCwmtnZWRYWFlCr1cRiseIC
      wGbEsHZj72A1ZQdA0OfB7QlhMGmJPyPJcOWyIsS6csJoLwTAdqig7RQajQatVktLSws+nw+f
      z7ep1JhS8EcSXO6b3vRGW39/P3a7nUgkglKpLH8fwOt2MecJYLBZUfJsJMOVa1soFPgvnz8g
      lxM4dqCWg02WXff18uXLtLW1MTMzg0KhQC6XF6+lUqlYWFjAYrEQjUZ54403ttzes2L3/uVB
      fnK2h0/vTHO4xYbdVNph/5X2Pv74Y2w2G9FolPr6+vJ7AI1Wh0abwqBSsPQMK8N5AjGMevUT
      16p/9tb2VZjfjJ1MJmNhYYFoNIrZbF5Ou8hmsVqt2O12ZmdnSSaTxfpX2+1nqSkNu/251Jp0
      fH7PxZwvxuvHWkq+xkp7p06dIhKJYLPZEARhfx6K/+K+q6Tdyu1oc7N20WiUbDZLNptlfHyc
      Y8eOkc1mSSaTZDIZpqen6e3tRSKRoNfr1+Q7bYef733SX0xpONxqe+K6fCWyOn2R5FMfXuW0
      t+cnwTuRXLU6ezIUS5V07nS30Wg0xT/Y6n2SleqXzc3NO9p+nVnH5b5JXIsRzhzdmaIXm2U7
      84v2/DLoSnJVXijgCWxP9cKV7EmZVLInv/x7gbMnWjncaiu5h9zLBGNJLt6aIBhLPvbeng+A
      1U8iY5m53k/CWqPl3fNHdmTJLZXJbVug7iZX7kzx3if9XLr9nYhWnVn/zH/5YTlF42S3o5jL
      tJo9f3dnT7TiCcQ2nVw1OjpazPevq6vj/fff58c//jHT09MEg0FOnTqF1+sll8tRV1eHIAi8
      +OKLm/J1K1v5OyVjWCq+cJJ3zx/hvU/6d73tSlKxAJiensblcqHT6YhEIrS0tFAoFBgYGKC+
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V3dc17W2+VTOEaGAQiFHAmCOChQlkZIlORyH4yD7+Bv9B85F/4Nz01fd
      d33TY/TVd74jZ/exLcuyTSWKSaREiiASkXMoFCrnqh36olhbBJEKgQQo4R2DAwRq7rXXXrXW
      XnPN+c45VbIsyxzgAN9QqHfawFrrZ7fXlCzLJbf5TZQrRfZJtLdfxma9vpTS3o4XgCRJq/4m
      imJJ1wqCUJLsWvdYD6Xe+0BubciyXNJ4b2UBPOlnCQQCRKPRbbW34wWwE0iStKXJfYAD7Da0
      pQgVV7tKpVJ+AsrPAxzgWUVJC0DIJOnr78NoryCbTGG26smLajrbW4DtnwPUanXJsls5V+wX
      3fRpyZUq+3Uew+2eA0paAKi1WK1mUjmRMoeFlEqNSSsr+uLjNylVrcnn88oi2AiP7jqbodR7
      H8itj1L0++LnpXwvT/pZRFFEo9Gs0vlLaa+kBaBSyehMLrq8lQTDCcotOtKiGrVajSzLaDSa
      FfKCIKDVbt60JEmoVKpNZUVRRK1WlzTYpd776ySn0Wg2HZutfCdrfadryQElvcCe9NhoNBo0
      Gs2qa0tpr6QFoNWbaKivBcBTaQDAVMqFm6DUSX2AAzwpHFiBDvCNxp4ugAMcYK9R2iH4CeFA
      BTrAXuNABTrANxoHKtABvtHYcxXoAAfYS5Q0A2VZJp/LI0sS+byAJIkIJRKXNsJaTrQDHOBp
      ojQqRDbF6NgIgmwkm8ngcJrIi2oOte2MCrEV2a+zG3+ncqXK7mZ7xc/3y9g8USqELAkYrBXY
      yBLIpJDUegzqr6gQj6Po4d203Yed2+wgXGyvVLf7gdz25UqlORfbK8WI8aSfpWhMebwvpbRX
      GhVCrUWNgLPcg8Zox2UzkBU161IhSnGlQ4HioFKpSpIt1WRa6r2/TnKljE2p7ZVKhSjer1Qu
      15McG7VardAhttpeSQtAZ7TQUG8BwGop/DSWcmEJOPADHGAvsadmmIPJ/+xjOZpiZin2zBoz
      9tQM+qwO2gEKWAjGudo7g9NqxB9KcKrDu9dd2jL23BB/sAs8u1iOpmitcXOitRp/OLHX3dkW
      DlSgA2wbXQ2VhGJprvdO88qJxr3uzrZwoAIdYEPIsszt27dpaGggl8tRUVFBMBjEZrMxNDTE
      qZYWtFotQjbNbMBPMpnE6XRit9sJh8OYTCZsNhuyLPPZwCyZnMhLR+rQaPZc+QD2eAHAwS6w
      3yHLMrOzszQ0NDA8PMzCwgLpdBpJkjh8+DBffPEFsViMtrY2UqkUer2ehYUFbDYb8/PzlJeX
      c/r0ae6P+VGrVFS7rVy9P83Lxxt22C+IJjIEYymsO5jFe7oADib/swGbzQZAS0sLwWCQ6upq
      1Go19+/fp7m5Gb1ejyiKZDIZUqkUBoMBWZbp7u5mcXERAINeiz+cRJJlTIadT7tEOstfrg/R
      5HUxM7fAm8+1b6udknqSzyQYGRvHbHGRk2RM6jwpQU17y870vgMVaP9DrVbz+uuvK7/X19cD
      BYdZU1PTCkdY8bNH0djYiCAItNeWowKyeZHDTZU77lc8lcPjtnKstYp7g+PbbkdVSm5QMZ9h
      fjFINpMgk8qgd7gxqmV8Pp/izX0UkiSV5CHM5/MlBcWX2t5WZA/k1kap2R5KkZNlmZs3b9La
      2ookSUxNTdHQ0MDExARWqxWr1bpi0Wz1WW4OzOEPJTlca6bcacPhcKwptxFK2gFy6RSJVBJv
      lYfAcgS31UBmF7JCFNOdHGSF2JncfskKIcsytwbmSGRyXDhaj1qtYmZmBigslKamJm7fvk1F
      RQVzc3OYTCaam5vX7GM2m1V+1+v1xONxNBqNwvlRq9V0+Wy80F2L3+8HIJfLoVKplLmSSCTQ
      6XRIkrRqcRRR0gIw2d0csrsBcDicpVxSEg5UoK8XBiYDiJJMQ5WTK/emePVEAydPnkSSJERR
      pK+vj6amJhKJBIcOHSKXy62b8+nmzZvodDry+Txer5e5uTlEUSQSiSAIAmVlZWSzWerq6lhY
      WGB2dhaPx0N1dTUTExPU19czOjpKZ2cnyWSS559/fs0+7/kh+OAg/PWB0aAjshhFo1FhNupQ
      q9V0dHQob/LDhw+X3FZ1dTWjo6PKIkmlUlitVux2OyqVipqaGvr6+tDpdNjtdo4fP046nVZ2
      w/n5eRwOBzU1NWSz2XXvU9IZYCMUs3I9ilK321LPAAcq0MZy+0cFgrH5EKlMnu6mStQP+/Sk
      x2ZpaQm9Xo/T6dxQbi3sqTdiKym2D7C/EYlEiETCaPMxPFYILi+XnO58L3GgAh1gVzA1NYUs
      y0xMTGCz2bDZbNjt9pL4/XuJPfcEH+DrAZfLBYBeryedTuNwOHY16YEsy7x3c4RIIsP5I7XU
      V7l2pd0DLtABdgV1dXVPtP355Thmo443z7Xw24/6qfO4CMZSLEdTOA3bn0d7zgY9UIEOUAoq
      nBam/VHevTFMQ5WDeCrL+7dGiSQyfHhnYtvtlkyFGJucobahhbmZSZxWI0lBQ2PtsxcAcYBn
      E3qdhl+8dphUNo/FoCUQTVPuMHOovpw7faPbbrckM6gsiSzMzyHkBRZCUaoqy1EDNTU1B1SI
      r5ncblIhnlQfi3K3B+dYCCU5XGuhzGFd4e0NRFIsR5N01FWwURdL2gHS0SDLsTReTwWuvIAW
      iaysPaBC7BO5/eIH2Om9tyr3/OECj2hpaWlFgYxQLM3H96aoq7RztXeGVzcI1ilpAZhdlRxx
      FRh85WXuUi45wAH2DIl0jkqnhbZaN9d6ZzeUPXCEHeBrh9pKOxaTjuu9s3zrdPOGsgeOsAN8
      7aBSqXiuq3b3aoQd4ADPAkRJ4t3rwyTSOV453oDHZd70mgMV6ABfG0wuRqh0WfjJK11c650p
      6ZoDFegATxSSJPNpzzQ5UeLiiUZ02ifHDfKW2bh2f4b5YJw2X2nGmgMV6ABPFD1ji9gtBsoc
      Zq70THHpZNMTu5fJoOPnl7rJ5kWsJj2CIGx6zQEX6ABPFHaLgf6JAPF0Hqdl+ymVZVnmr3/9
      K83NzczPzyOKInq9nrKyMvr6+ujs7GRychKdTofH48Hj8TA/P8/Y2JgSd3zixAmuXr2Kx+PB
      bDbT2tpa2hlAzGcZGxsjHo8xNjFNNBxgIRDa9sMUcaAC7T5EUaJndJFAJLXXXQGgqdpNd0M5
      NeU2TrZX76gtp9OJ319IvuXxeEilUiSTSXK5HJOTk1gsFhwOB5lMhtHRUYxGI0ePHlVCK2VZ
      xmw2Mz09zcLCAlBqVgghT2BpHr2lnHhwCVGnQSPJ1NbW7ogKIQhCSfUBDqgQpcu999kotRU2
      eseX+MFLHZgNui21tx0qxMjICAsLCxw+fJiFhQUlgH1xcZHKykp8Ph+zswWHlMlkoqysjFwu
      R29vLw0NDfh8PvR6PSaTacM+5vN5BEFArVYTDocpKytDpVIxNzeHwWCgrKyMSCSCy+UiFArh
      dDpXPIdWq0UURdLpNIIg4HK5SlOBMrFlZvxxyqwZUoIKMyLpXcgKUazgcUCF2Jnco1SIdFag
      2VfO1FIcQURp40lTIWpra7l79y7hcBiLxYLdbqe1tRW9Xs/w8DBarRabzYYkSYRCBe2hra2N
      XC7HlStXePnll7FYLBv28dFn8fl8yt9tNpuygEwmEwBer3fNZ9bpdBiNX6liJS0Ai7ua0+6d
      bV9r4UAF2n28da6Vj7+coLHaidtueir3tNlsBAIBTp8+jVqtRhRF8vk8RqMRtVqNXq/Hbrez
      tLSE0WgkmUwqUWMqlYq2trZNF2deEMnkBGxmw672/cAK9AyimK/T4XCwvLxMZWUluVyOfD6P
      yWTifGclGo2GXC5HNpvFZrMRDodRqVREo1FqampWvAV3Cp/Pt+KN/DjMZjNarVaJGlsP61lt
      coLIrz/oxW4x4C2zcbKtakf9fRQHVqBnEGNjYwQCAR48eEA0GsXr9ZLP50mlUmi1BZau1+tF
      kiSGhoZ48803uXnzJg0NDQQCAWpra/f6EbaEQCRJbaWDC8ca+O2Hfbu6AA4iwp5BWCwWZmdn
      yefzVFdXo1KpEEWRsrIynE4n2WxWyeKs0WiYnp6mqqqKdDpNXV0der1+rx9hS/CW2Uimc/z6
      g15ePLK7oZff6LxAEioyWQG7ZX298lk7BO+0vWcpHqCIneQF+saqQNmcwB8+fYDdbMBXaed0
      R82e9eWbjMnJSe7evYtGo8HhcCj/BgYGaG5u5vr163R1dZFIJDAYDIiiqOx6w8PDVFZWIkkS
      CwsLOJ1OFhYW+OEPf6hYgzbDN1YFWgwnaax28Z3n2xibC+9JH/Y7liJJ/tc/7/Pbj/rI5Dan
      FTyOQqa4MIPTy+u+7Gw2G5lMBoPBQGVlJUajkeHhYaqrqxUVTxAEQqGQMl/8fj9+v59YLIZG
      o0EQBLxeL7lcjmPHjpU8+eEbrALl83nevz1OLJnlleMN1FTYd9Te11EF+vO1B7x6opHZQIxk
      Js+pdu8KOdhYBRqdCzE8HcRi0mLU6zjbudpSlM/nicViirfW4XAo3zdAOBzGZrORzWbR6/XI
      sqzMOb1ejyRJBINBRFHE7Xaj1+vR6XQlP3NJKpAsS4SCYZwuO/FEBrNBQ05SYzXvzJS2lyqQ
      SqXiey9sr6rINwVdjZW8e2MYQZT4l22MVTKdo8xpxmnRMxtYu4qkTqejrKwM+GrCPjppKysL
      obiPvtUfn9harRaz2YzlYRH3raCkHSCfSTE3P0Miq8GolhB1GtQStDQ3PTNUiN/97nd0dHTQ
      19eneAxDoRBVVVUIgoDJZEIQBJLJJF6vlxMnTqxo70bfLMuxFJdONmFeo8TPfqFC7FTucSpE
      Ni+iUavQPlbUrrQCGXCjf4ZUJsdzXXWo1ao1x26nzxIIBNDr9U+uQIaQTRJNg8OsJp3Ko9Gq
      EOWvHnytQShVty/lHLDVs8JasnV1dWQyGY4fP87S0hKVlZXU19fjcrn49NNPMZvNqNVqfD4f
      g4ODnDx5Url2YjGCKMucP1LPB1+M8y8vrv023Moz72e5TE7ggzsTWIw6Xj7eoGR53mqbKhW8
      eLiOxWCcv1wfQqtVc6rdS7N3fYfYdp6l+P/tzMOSyXDJVBqT2YyQF9Bp1YiyCoNet6MzQLGi
      R1FnW/f+OzwDyLJMJBLBarWiUqnIZDLkcjnsdrtS3K2oX+r1esWjWmwvkshx+Ysx5Zzw0tHV
      tbC+TmeA92+NcLzVy3wwjl6r4UizZ005KM0MerVnEm+5HZfNxM3+Gb79XNuO+vjUzaAarQ67
      vTBJdQ8b3A376dOyAqlUqhVueKvVukLfNBhW+gEeH7Qyh5lLp5qIJrM0bfD2etoYnQtxo3ca
      q9nA9893bPim3grKHWYGJgNEEhnOdu7cPHyyrZr3PhslL0p8Z53Jv1c44AKVAJWqkJuywrn1
      Q9aTxK2BOd6+2M213hkWluPrWrK2ilPtXqaXYpgMOjwu647b0+s0/PiVrl3o2e7jG+sIe1Yw
      sRDm8wfzHGupoq22bMVnHfXl/PHTQfKCxPk11LKNMDg4iCiKOJ1O+vv7cTqdCoPT5XIxPT1N
      e3s7yWQh938ul8PtdhOJRKitrUWSJNzur+JuBUHgP//zP2lra+PBgwd4vV4cDgfRaBSj0YhG
      o8FuLyzQYDBIS0sLc3NzlJeXo9FoaGho2PFYbQcHQfH7HFfvT/PTV7v43ccDNNe40Dyic59s
      q6aj1o3RoFvx91KwuLiojL/P56OpqYn5+Xmmp6dJJpOEQiFGR0dpampifHwclUql6P3Xr19H
      pVLx1ltvrWjT6/WytLRES0sL9fX16PV6RkdHSafTuFwuJYjF6XQyOjpKJBIhk8kozNTdWASy
      DDNLUZbCSY40VWwqf6AC7TJkWebvt8cIRlN0N1ZyrHVnzEWdRk3f+BKwtkXDoNNsS/fv6Oig
      urpaCQ3UaDTYbDZ0Oh0Wi4VsNktVVRVDQ0McO3aMfD5PMpkkHo9z6tQpZTEUodFoOHfuHCaT
      iWQyqRTIKAar6HS6FQf24u6fSqWUGILdwHI0ya2BWTrqK/jwy0nePNu6ofyBCrTLiKdy5AWR
      n13s5n/+vYejLZ4d7XI/utDJ2HyIH7/cuWuHXChUYXz0JxScTuXl5SvIcG1tax9aH18AKpVK
      scI8alSw2+3KxF/L31NUi2D9eICtICeImI16yh0mxuY2j1s/UIF2GVaTnmxe4P/4X1fxVdj4
      5+djfOtMy7ryoVAIjUZDPB4nFApRUVHB+Pg4ra2tythE5keZzpYxMzNDW1sbwWCQ2tpahoaG
      qKmpYWJigsOHDyse1SJkWSYcz2Az6/l6jfL68JbZCERS9Iz6ee1UI7Is82nPFMvRNK+fbloV
      UVYiFUImmUxhMmgJxVLYzTqyohq7dfPUc5u1+3VbAGq1im+dbkGtUvODlzr41eXeDeUXFxfR
      6/UsLS1x9uxZ+vr6mJubw2otWF9kWWZxcRGdTsf8/Dxut1vhzjgcDgKBAIuLi2vW4L3SM0Uy
      nWM5muInL3dSgon9mYdKpeJYSxW0FHaUiYUIABdPNnL5i3F++NKhFfIlDYmUz+IPBDFpRBYC
      MRxuG0hgNTco5KQV8g8rg2/a7kPi1WaLoFS5rd77SclZjFrcNgP/9Y8ezhyqWXH94+1ZLBZG
      Rkaor6+np6cHr9eLzWYDCqGExQOkyWTi/PnzhMNhtFotTqeToaEhvF4vTqdzzX7O+KO8fbGb
      y3fGCcVSVOk2z8r2eLpKfzjJPz8fQ6fR8P3zHRj1GkXu0Z+ljs2TkCv+vtY8tJl1zCxFkWQZ
      t824SqYkT7CQS9PbP4TNYiIaiWNx2ZFlNR2tzWvyLdbyDq/ZbolcoK14gku9917K3RleZHgm
      iMdl4dKp5jUrmOzkvnlB5PMH82jUakZmg3jcVl45Vo+2hLSExQVQ/E7/dO0Bl042FRih6Rwn
      HzJCt+IJftJjvZ4nuCgXjmeIJjPUexyr5lBJO4Baq6e9vQ29Xo8gSui0aiRZtSMOBnylApXK
      BdrvHJr15ARRIhLPUOYo0CtGZkP82+tH+OOng2TzAibD2lSQ7fKf/npzhCPNHm4NzPL98x3Y
      zAblZbMZHie5HWup4s/XhpBkmR+c71j1ne+HsVapVITDhZgOSZKIRqPE43Gqq6uVhTI11Isq
      28DS0hLNzc0EAgEcDkeJC0CtwWwu6PtFPXK3Upx+HS1Bj0IQJX7zYR9lDhNqlZqLJ+qpqbDx
      +48H0Os1GPW7r5jnBRGn1Yhep0GUvhrf5WgKu8WAfgsJahurXfgq7KhVKjSaPY2f2hCzs7Pc
      uXOHzs5OMpkMADdu3MBgMNDS0kIkEmF2dlYxMqTTaQYGBg6sQFvF/TE/g1MBnuuqpc7j2FQ+
      mclhMxt440wL7zw8EL98rIG8UNhJn8Tzf/f5dj65N8nhJg9Oa8HJdKVnmmxeJBBJ8valw6sW
      wdWrV7FarVy+fJkjR45gt9uJxWJYrVaCwSATExM0NDQomSU8Hg+hUAitVsuhQ4dWWaCeNqqq
      qujo6FACZBKJBGfOnFHyEr311lvMzs4yPz9Pc3MzKpUKk8m0936AZ2kBZHICg1PL/PClQ/zm
      o35++fqRDeVlWeZqzzRTixH+r9/c5IcXChYIlUqFvoQD6XZhNup469xKB9D8cpxfvH6Ef9wa
      JZbMUu5YacEzmUzkcjkaGxtxu91kMhkEQUCWZbLZLF1dXVRUVDA9Pa1EZwWDQSRJ4ty5c0/s
      WUpFZWWlcgaoqio4Hx9ngzY1NdHU9FV26qqqqr33BD9LKpBWoyabF/hiaH7DwI4iosksAP/+
      ozO8c7mXZq9rV5w928FLR+v41eVeqstslK2RMe748ePIskxXVxdarRadTqcYOERRJJfLodVq
      6ezsVHJsllrlc7cgyzC9FGV6Mcxz3XWrgnS2g29sTPB25TI5gdlAjIYq54ovYK32JEnm/7s6
      iCBI1HkcPN9dWt2qjfo3PBvk7tACx1qq6Kgv/0alRYkkMvz91ijHWz08mA4pgUnPdFqU/aYC
      DQwMAIV0f4uLi6RSKURRxG63Y7VaGRwc5NixYwwPPeDQoUMEg0ECgYBiz6+qqqKlpQWDwYBa
      reJHLx1CEKVdeVsBfNY/y88vHebXH/TSXlfQu0VR5Le//S02m01hdebzeeXllM1mCQQC/PKX
      v+TatWv4/X6OHTtGa2sr7777Ll6vF5VKxdLSEjqdjhdeeEHxRewniKKETqspFL/YJe7QgQr0
      GPx+P2VlZYTDYVKpFIIgMD8/TyaTIRKJUF9fz+joKJ9//jmVlZX4/X7m5+fJZrM0NzdjNpvJ
      ZDI8ePCAsbExWlpaGBkZoa6uDp/PhyRJ1NRsP8hEq1HzxYP5FS8OWZYJhUJ4vV7a29vp6enB
      aDQSjUYxm82IokhXV4GPb7FYkCSJubk5hY1Z/CdJkqL6bBeyDINTAVKZPCfaqlGrd+8F57ab
      6Gwo5/6Yf9cCa/ZUBSrqw/tJBfL7/TgcDm7cuEF5eTm5XI6amhoymQxarZYHDx7Q2Ni44g0p
      yzIzMzPU19ejUqkYGxtTCjLodDqi0Sg2m41QKMTp06eVQ9pm/UvlRL54MM/x1ipctochmqLE
      5GKEeo8DnVajqECyLCNJkvL/XC6npBrRarVkMhksFguiKCo59oshoMXEBkWPqk6nW/Gdzi3H
      +fCLcTQaFT986RAmg25dFWh4JsjkYoRyh5lkJsf5I/XPfmY4IZtmeGqeCpuecFpGJ6VJCWq6
      Ojammm6GYn2A/QSPpxD/+uqrrwKrB3G9xLLl5eWKXEVFhTKpimqeLMvKZCwVf7pa8ML+5foQ
      v3z9KOqH2RlaalYXgCu+IIq2/iLHvjiRjUajct56vA/F34uMzcffibcH5/jRhUNML0UZmAwo
      3uC1IIgSRr0Wk0FHJJEp+Vn3CiV9G1qDCZfNQjIVIRFKYCyrwGIsvHGKh6ZHIUlSSdaO4iQp
      lQtUCkq999OQe5wvo9Vqt9SeJEroNCokSUYQBdTS6nF6VF355N4Ugigztxzj7YtdK2z9pd53
      LY7P0eZKfv9xP6jgh+c7FPPo4/cHaPO5SGXyLIUTvNjtK+Rg3eFYf9ozxXwwweunm3DbTKvk
      ijygx68t5b6rFoAk5Ojr60eQoLn9EA6LkXwmQSwWxVvjQ62PUeYwkRY1O64QA+w6F+hZyOS2
      mZwkyyyGknz7+TZuD87z1rlW9OtkznjUCuQPJ3n74mEufzFOPJXH4zaskNuuFajJ66a+yokK
      laLTb2QFOtWxcofYydj4QwlyosxPXunmD1cG+Pmlw6vkijvX49duSwUKLgdpOdSFXqNi0R/A
      YfGiM1ppby+YnGwPabq7ER5eVIFKIUB9k/Dfnw5iM+tZjqb52cXukgNhXj3RyK8+6KWqzEql
      q7RvKJPJcOXKFbxeLxMTE5w4cYLR0VEaGxupr6/nzp07JJNJTCaTYl3SaDRKXYKFhQUqKiqI
      xWKIosipU6dWxArvFHaLgfnlONf7pql8AkkJVi1fs0FDf/8g8UQab836ut4Bdo54KsuHd8ZX
      VXRMZQVePd6AioIvYT2k02kkSSKTybC8vIzNoOKtUz6eP1RFNBoll8uRTCZJp9PrtpFMJmls
      bCQQCDA3N8fs7CzDw8MsLy8X+hiPE4vFgEIaw0QioWTQS6fTCrmsubkZi8XC0tLSzgfmEZgM
      On76ahctNW4unmzc1bZhLRVIlknGI0xPz9HltG8rfXSpaQxLVWu+rvjztSEunmzk/c9GePtS
      t1JF/WRbNb/+sJ+uxko0G5gRJyYmmJiYoLq6mtnZWcVE29hYmCjFZF8Gg2EFBeBRuN1u5ubm
      OH36NGfPniUcDnPs2DFmZ2cZGRnh1KlT5PN50um0kjCsGOdbW1vLkSMFOkhlZSXBYJC6ut0t
      YAFgMeqxGNcu6iHLMlfvTxOMZznU7OP8kbWzY6QyeVLZ/CoKyOoFoDZw4aULqFQy0Wh0Vb7F
      tZBIJJidnaW6uprBwUF0Oh0+n0+xqKyHb7oKJMty4aD62BzvbKigzedaob9KssxiMEGV26ro
      4VarlQsXLnD79m1FB25vb1fs+yaTiaqqqg0rwqhUKmUSQ4ETJMsyLS0rwzgfr+9VtIbJwN9v
      jZHK5HjrucOY15moTwqiJDO/HOeXbxynZzKypkw0keG/rz6gzGGi0mXl7KGv/DCrFoBeI/P5
      7VvIgK+hlRLmP1arFYvFwuTkJOl0Grvdjt/v33QBfNPx3Rfaudk3w+unmpW3/3r4wycDlDvM
      fHJvkrcvdqNSqairq0MQBF555ZWSqBCPIp3N897NEfQ6DW+da922p7p3bInaSju+Cjsf3Z3k
      u88/3cxvGrWKSpeFP3wyQEv92iq7P5yko66cI80e/vbZyMYLwGRzUd/QQDqeoNJT2mEmFosR
      j8fp7Owkn88TDoeVmNaN8E1XgZxWI2+eK82Xks0JvHK8gV990Isss2YU2Vbwyb1JXjpaTyie
      5s7Q/Jq5+0tBVZmVD++MM7kYobayhLflLkOlUvHK8Qa0Wh0ul3NNmZYaN3+fG+VP1x7Q5HVx
      9f4Uz3fVotGoV3uCk5FlPv/8JhOLIv/2y++zcdpalDL1j6LUNNelkuGKqtLXJSRyO3LDs0Em
      FwqT7FB9ecntRRIZ/OEkahW0+r7i7I/NhYmlsuTyAvVVTqrcXwXhPxoSuR4ejRyLJbNk88K6
      qSOf9NiEQiF0Ot0q/tLjcv5wkr7xJRqqnSwsx3nxSN3qHcDiLMdittPZZisplYZGo1mVO2Yr
      dt8DP0ABsiyztLSERqPBYDAQj8cRBIFoNEpzczPpdJpXzh5Bp9OxtLREPB5XKj729vZiNBoR
      BGGFPg/wzuX7/OzVs/zj8zHcnhrlENjWtnaO/83YoNP+KB9/OYEK+NeXO0vS+fcLFaIinmY8
      rEY2munsrKGtzbe2J7jcZefa3XGOnT2BlodUiMk52ptquPlFLzUVdpKChu5dohoIKIcAACAA
      SURBVEJ8kw7BN/tnmfLHcNmMvHXuq9w/kiRx/fp1DAYDVVVVSsrAqakpgsEgzc3NfPzxx5w+
      fZq7d+8qbM/KykqmpqY4f/78mubOcoeFT+5NshCMYzOvnKzbUT+/GJrnxy93MbkY4cF0kBNt
      1Ztf9BSwHE3x5USY80fq1z3POK0mfnThEMl0TvGTrLkAlqNhUuGY8rvWYMJltzI7NY0o5BBU
      BiwGDqgQ25CbXIzy9sUu/nRtiEQ6i+lhTHCRJZrP55ViHYlEAofDgV6v5/79+9TV1XHz5k1a
      WloQBAG9Xq+E/AmCoKQffBQXT9SzGE5ypqMajWrz7GubpTs53urhNx/2olLBv144tC/GOi8I
      vH9rhO+cP8K714f47vOt67Zn1Kkx6r5Kj7JqAeRSYVJ5PSfPHlNUoAIVIoavvgmPrx45nyF1
      QIXYlly9x8FvPhrAaTViNRlWPNPZs2c3be9xFUcQBN56661VYyMIguKdDS0sgNvN58PDnD9/
      fsOCJJupQI3VbhrecikLZD/UCdZoNKhQoVGrUavVymfxZJp0Lr/KKy5JMv+4PUokmV29AGYH
      h0nkwvT1z3D0zHGAh1SIop6vA6OR0gtRro9vogr0fLeP8w+f90lawARBYHl5mXg8zgcffMDZ
      s2dJJpMKTXoneDS57X6AWqXijbMtjM6F+PZDq1osmeWPVx7gcVtxWo083/0Vi3d4JkiZw8z5
      o/WrF0DTybM0AVx6Wt3/+uHGjRtUV1czPT1NY2Mj4XAYs9lMXV0dPT09Sg7QfD5PNpvF5/OR
      SqWQJInJyUmOHj2Kz7c9s2QRer2e+fl5PB4P//7v/86DBw+U+IS1sJ8m9HZQ7jCv8AMEokla
      fG5OtXv5682RFbKVbgu3Bmfxh5N7GxG2H/0AsiwzNBNkYTm+5aITRTidTsbGxpieniafz6PX
      68lms5SXlzM/P8/x48dZXFzE7/crTE6n00lfXx/t7e07nvxQGNuXX35Z+f3IkSPrqhfzy3H+
      +fkYKhX84HwHFuPOdoj9gMZqF8PTy/zp6oNVKdLdNhP/+nInqUx+byPCnlaRvK3ILQTj3B6c
      42hLFb3jft4807zl9kZGRjCbzVRWVhKLxTCZTEpcrs/nY2RkBJ/Ph9/vR61WYzAYMBgMZLNZ
      PB4PJpMJURSfWpG8v1wb4uUTDSxHUiwE45zrrNmXQfGPyxWnbiAQQKfT4XQ6V/gxHm3v0cCk
      R8dqz2OC9xsKg1TgmKi2mVS8tfWrN04xYZTZbMblKqRFOXr06IrP9hKyLNPodfI/37+H3WLk
      hy917HWXSkY+n+fPf/4zHo9HyVNUU1NDX18fXV1djI2N4fF46Ozs5G9/+xu5XA6A7u5u7HY7
      09PTByrQ4/C4rHQ2VDC7FOONsy0gby1AvPAGKlAV9tuzrYW+iQCjc2HKHGYuHK3HYtTtq/PA
      6FyI8fkwLx9rWJVMbGRkBEmSWF5eJpVK0dnZSS6XU4qct7S00NvbS2dnJ+Xl5YpJeXFxkXg8
      js1mO1CBdlNOo9Hw52tDJDM5mrwunutaHT+83+oE/+2zEU53eFmOpoincpxqr943eYEi8Qz/
      +HyMl47Wc613mh+/3LmmXNET7HA4kGUUtmwp992/2U53gGAsxXI09dTfZPFUDrVaxc8vHWZ8
      PvxU771dvHK8gU/uTTE6F9o3Xt0iVKrCjiqI4qZRcbIs84/Px3jng/s8mF7eVFYQhMI5q5SO
      CNk0E3NLVJfZmJxexGo3khPUtDU3lPwwa+FJqEDjC2F6RpdQqVQcbfGsIIBtBbIMiXSWaCJN
      TcXqvPJroUg1+K/LvbTX7r1+XwpMBp3yZoXVQe57CYfVyLlOH6NzIb73wsY0a0GUiCayvH3x
      MH/4ZICOuvIVn0uSzN9vjxJJZGh0iCCkGRoaKl0FWlhYxO20EggnkCUBZJmamhqFzrDyZrvP
      Bi01yuyTLydp8rrQaNQMzwR55XjDttqMJrO8e2OESqcJm9nAc10bmyZL7eN+l0ukc7z32Qgm
      vY5vn2tZNyX6WkS63ejj/Pw8arWaTCaD1WpFr9cTCASQJIlQKKTUHH7UI160At0dj7AQTHCu
      q4Zmr2vFfUdmQ4QTGQ43VvJ/v/N3Xmh3Febepr2iQIUIBoPk81kyWQGXw0x2F6gQRU/wbibG
      evFIHe/fHkeWZb77fNu6VVE2zUOZjNFS4+ZwUwWX70xsKBsOh/nkk0/wer3EYjFyuRwNDQ14
      PB5kWaai4qt6tbt1BsjmBa7cm8JXYeNQfcWu5Qa9en+MN8+2shhK0ju5zKl1cgA9qTOALMtM
      Tk4SDoex2+0K4c/v92OxWAgGg+h0ulVUCK1Wy+uPFSN89L7ecju3H8yzHE1z6fxpzjwMiilp
      AeiMVrq7d7/U/W6qQLIsc+PGDQ4dOsQbp+rp7+9nZHgIg8FAc3PzlttrrHYxMR/hb7dGV6Ua
      fxz5fL5wTWMj6XSayclJpqamEEVxy6ZOWZZXFLVYD+9eH+bFI3V82jNFdZlNyRy3UzRWu/j4
      y0nSWYHXTq+MIxZEiWv3p3HajBxuqnwilSdNJhMtLS1KDqVQKER9fT1ms5mlpSVOnjxJIpHY
      crsOq5Efv9JFKrMyLnhPzaC7yQUSRZGJiQmFJnzmzBmuXbtGW1sbgUgSKFCDN1tvoigq3tuL
      JwsT2rBBKkAoeH6rq6uxWq1KYYnTp08rAetbwcdfTuIPJ7EatXzn+fZ1XxAatYpMTkAUpV2t
      H9zZUE51mQWDXofVtJI+/dHdCRqrnUwtRhmbC62ZoW6neDxtZPH3lpYWJU750fjkYhyFSqXi
      9u3bPPfcc9y9e5djx44xMTGhVNOsrKxkcmwUr9fL0NAM+XyeqakpNP/xH//xHzvp8FrRQ6Xq
      fMXzw2YLoJRaYkWZYobkkZERDAYDi9E8o/40k/4IBp0G98Pc+Ov18c6dO7z77rtYLBbi8Tg9
      PT0MDg4SCoXI5XJr5rzRaDRUVVVhMBjQarV4PB50Oh2VlZVbPh9d753h55e6uTe6RHtdGZp1
      ZFtryuibWOJQfRlVZbaSKOWP31cQBK5du4bZbGZqagpJkrBYLPTdv0cyHmNkZIRMJoNarSYY
      DPJgYh6300k4kaHSacFpM+76GSCdFfjH7VFuP5in0mleVdd3rfb6+/vJ5XK0trbicrkYHx8n
      Eolw69YtvF4v9+/fp6mpiQ8++EDxyKvVajwez947wnYLGo2Go0ePKnpfMZHXR3cn6PK5ESWZ
      yYXIpm8to9HI8ePHmZ+fx2KxkM/nsVqtW4pJeByyLHOtd5qpxSjnOmto2cAy1VDt5J3LvZQ7
      TBsGqmu1al46Wl8Sf349RCIRGhsbmZ6eZmBggBMnTlBRUcHy8jJWq5WamhoWFxcxGAzEYjGO
      1DtJZPM0eV00VK8df7tdSLJMMpPn//3rl5j0Wppr3Hx0d4JfvLZxFR4ofPcWi+WhH6BA+PN4
      PLz99tukUiklvuJ73/sesVgMi8VCOBzG5XJ9/R1heUHkvZsjqFTw7efalEn1NB1m0USGK/em
      +M4Lbfzqci//tklppa3ed7uOMFEUuXXrFtXV1dhsNqanp6msrESv11NRUcGtW7fweDxMT08r
      ZLpi3O1uHoJFSeJ3H/WTzuaxmg3Eklmml6K8eryRl9ew4u1mdug9XwCPBjBsdI+tLoBMJqMQ
      o4xGo8KDL1quJEl6agtAECV+/UEvlS4LkiTz5rlWFhYWlFheo9HImTNn6O/vZ3Z2FqfTidfr
      ZX5+XilHlM1mUalUvPDCCyvGYTfIcI9iOxViZFnm7vAC8VSuEGiuWa1qbXTvhWCC/sklXj5a
      x//5m89oqHbyQncttZX2NZ/rqadHf1LYTRXocQwPDxMOh5mbm8PlcqHX6zEajSwvL3Pp0iUM
      htW65ZOCVqPmZxe7CcczuG2F+xbPGM3NzbhcLtLpNAsLC9TW1jI5OUk0GlUq08iyTHt7O9eu
      XduXVXWGpoMk0jm85TY+uTfJpZNrZ6FbDx63hRt9Gd75oI9/ebGdQ/XlXP5inE97pnj1RCPe
      8idXrWZfWIGeBBoaGnC73UxPT+N2uxWmYFFf3InuvB3otBoqXV/dV6fT0dXVRW1tLWq1Gr/f
      zwsvvMDs7CwXLlxAo9GQy+UwGAykUinUajVHjx7dd5MfQKdVk84KJNK5LdUgLkKtUvGjC53K
      G3sxVDBz/vzSYX79YW9J54D1EElkiCWz6+4mJalAQjbN+NwSZVYdc0sxnDY9aUFNe3PDvlWB
      nrZcXhCQUaHTbNzPtdoLxlLc7JvleGsVNRX2Lfdv71UgGJpZJpHOcaJ1dVmkrY51Ni/wq8t9
      eNwWLEY9F47VrylXxHoq0HIkwfu3xvCW29DrNGvmDS25QIbNZCCdy1PtMBOSVZj1Oy+QUdTF
      N5Pd71khZLmQ6FaUZTwuCy8eXruKzHrt/fXGMN8+18J7n43y01c60WrUW+pfKdhJgYyN5Ir3
      b/E6H/4u8niXtjrWGhX89NVDxFM5yuymVdcKokhelNA9PGusVyAjFEvhq7BxrMXDh3cn1+zD
      lqgQ1dUewvE0lVY9KWF/UiH2YgeIp7JoNCp+dL6Tdy73bii/VnsatZpUVkTFwxJGGvUT2QHU
      ag0TC2E8busqJ1cR+6VMqlarxWxcfU4TRInffdKPTqOmq7GSI82edQtkNHrdzAVTfHh3itdP
      t6zZhy1TIYqefdcG8lvBftRptwqrSY9ep+Wdy70r0haWih+c7+DO8ALfeaFt18qproX3b43i
      shm5en+an13sxqh/ukdAWYalSBJBEPGWb+68Wwtzy3HqK+28eLSe337Uz5Hm9RMwq2AVGVIU
      Jd77bIREKse3zjTv7SH4WZj8kiTz7o0hYskc3zrdTLnTvEpGpVLxrdNNG77llpeXiUajirwg
      CKTTabxeL6IoUqFPcf2TDzh9+jTxeJzy8nLu37+vVHY8c+bMjscrkshw6WQjy9EUqWx+VxeA
      LMNyNEkmJ+CrWPvAOeWP8MXQPCa9lmAsveHkXQ++Chuf9c/wq8u9awYcbYbh2RDVZTa6Tlbw
      /q2RvQ2IKdrp9zNG50NUOi388KUOPrk3ue12NBoNg4OD3Lt3j3g8Tjwep6Ojg48//lgJ7Wtq
      amJ0dJSenh7UajXJZJLq6mrq6uq2PPllWSabF1ZUmHn9dBN/vj5ElduKe5fIc0XMLcf4+MtJ
      +icD3B1eWFPGH07SWV/B0ZYqxdKzVWjUan70Uge//NZRWnxb5yJ5y60MTAb4x+ejNFXvA0/w
      frcChWMp/nJjGIfFSG2lg5Ptq8ltEwthesf8nD9avy4rU5ZlRkdHFXpvIlHItldTU7PiIFt8
      KWg0Gvr7+zl+/DgqlQqLZe3My+udAb54MM/YfAhRkvnpK13IcmmOv+2eAe6NLiLLMtVlNu4O
      L6xg0BbHWhQl/vnFOLm8yBtnmzHoVvbnKzmRDz/8ELVarZSc9fv91NbWMjAwgM/nY25ujqqq
      KqWm82uvvcbU1BTl5eWMjo7y/e9/f11nZyYnkMkJOK3GAxVoM9jMen76ajeZrIDTZlz1eSYn
      cLNvltdPN/LeZyP82zo2a5VKRWtrq/Ilb1ZILp3NUVF3CK3euC1VZWhmmZ9fOsyHdyYIRFOU
      21f3fTdxuKmSj+5MMLUY5Vtn1qafazRq3jzbsuZnj0KWZcWTb7VaaW1tJZFIMDIyoixMm81G
      RUUFExMTygG4WLqps7MTtVq9roXMqNcqY7qnC2C/qz9FPDpgj0OtUiFKEuF4Bu0uerb/dHWI
      Vl8Zv/9kgF9cOrzKtr4ZTrZ7+a/LvVhNejwui5IM9klBo1bz2umtx12s2ZZGwyuvvKJUsvf7
      /Zw5c4Z0Ok0gEMBisRAKhbDb7Zw6dQqHw4FWq6W6uhqPx7OlZ93zHeBZ2AU2QrHE0MBkgH95
      sX3X2s0JIkeaPTyYXkaSZdSbhJ9kcgI6rVqhT3fUla+Ki31WUKS1F1FfX3BgGY1GJbdSTc1X
      ZY6KC6XoCNuIXCnLMp9//jkej4eZmZmDxFjrQZZl7t27p4TjNTc343A4iEQizMzM0NDQgCzL
      xONxnE4nUmSSdNKGTmPn9u3b+Hw+gsEguVwOu91OOp2mtrYWURTR6/WbqkAvHq7lT9cecLrD
      u6lp9O7wAmNzYXKCyM8udj9RU+p+gShJ5AVpy+qhLMvMzs4Sj8cLZMOtXBwNBVgIRHHZjaQF
      NQ21O6sjvJ9VoFAohMPhYHp6Go/Hw71797hw4QJjY2N0dXXx3nvv4XK5SKVSVFVVMTk5iUaj
      WRFLsLy8TEtLC7IsYzKZuHPnDhqNBrvdviIVehGyLJNIJAoRaVKKVw97MBqNRCIRZFnG6XSu
      uWM+mC7o+x9/OclSOPlEyGM5QeTKvUkcFiOnO/a2fnRelPjDh/3odRra68rx2ktf8CqVCrvd
      jsPhoKamZmtWoIXZSRYDMZwVbrS7kBVCEEorkbSVrBC7lSUhn89z/fp1XC4XoVAIt9utFP6L
      x+NUVlaSTqcJhUKo1WosFgvZbLaQjz8UwufzsbS0RHt7uzL5y8vLsdlsRKNRJT3i430aGRkh
      Fovh9/txOp1UVVWRTqeRZXlVbYDiNeMLUT4fWsBs0PK959vWDPssdVwmFyMYdRqqylYuostf
      jNPmK2N6KUqV20pLTcEVut2IsGxe5K83RxAlmW+fa8Fi1JXex4Uws8sJnuvy8Ycrg7zaXaEk
      xtrsvo9jSwsguLTAUiCC1W4mJ2lorvftyAzqDxWyEtvMRr7z/Ppe0P1OhdgtOVmW+eijj6io
      qMBiseD3+4lEIhw6dAi1Wq3owo+3t1tkuDtD8wRjKaKJLGc7fdR5vppQn/ZMYdJrWQglONpS
      RW1FYYFslQohy4UExJ/en+Jcpw+rSc/nD+Z482xr6ebzfJ6/3Bghnc3zQncdVm3+2QyI+f3H
      fbxxtoWR2TB6nYbuxsp17/FNWQDprIDJoH2q2aGL+PutUbobK1gMJZApeI6tJgPnOmuQZegd
      92MzG2isdiHL2+MCjc+HuT/mR6tVM7UYwW03c66zhsZq17bH8JkNiGmrLePvt8ZI54RdtaA8
      q/jnF+MkUjk0ahXfeW61vfzRBfIkrGcvH2/gn5+PFRagJNPmK2M+GGdwapnOhoIH96u+bO8e
      y9EULTVubBY9slzg6qxHzHsa2NMF0FlfTl2lA5NR/9SJWU8DwzNBHkwv8+LhOiUbxUYIhJP8
      4rXD/O7jAfKCxOMvr/dvjZLJCWg1ar77fNuuLwKjXst3nmtFlmU+G5hjKZwkHM9QU27ftXuc
      bK/mwzsT5Pwi3zrdvCrj89PGnnOBrCbdmpPfH0rwzuX7/Onag5ISRe03JDM57g4vcOFoPe/f
      Gl1XLpcX6RtfIpnJ0VZbxjuXe/G4LOi0q7+aUCzND853EE/ltv0GLhXPdddiMenoaqigoar0
      DBCCIJDL5cjn8wiCQCaTUf62tLSEKAicbnHz6lEf8ViEXC7H8vIyyWSScDhMNBolFouxuLj4
      xJ13sI8dYZ/en+ZHFzrpGV1kbC5ER33FmnL7FVq1mrwgshBKbPiW+++rg7TXlvPHK4P84tJh
      JWXfWsEbzTUu3rnci0aj4lcf9OK0GvnWmUL8rShJDE0HC0S3EnabjbCwsIBarSYbmsfidnPl
      Sg8nT55cVYl9vWuHhoYAqKmpwe/3EwqF6Ozs5N133+WXv/wlf/vb3/B6vbhcLpaWlkgkEpjN
      BZZtIpFQklq98cYbO3qOUrBvPCaZnMD7n41we3AOWZZpqXHz3s0RHkwHd3ULflow6LW89Vwb
      sWR2w8zGubxIe10ZWo0acZPX+nNdtfzb60eQZXj7Ujdmo46F5TgA/7g9RiqT590bwyQzuR31
      PRAIEAgE0Gg0jI+P09TUtIqMl8kJCOJqrk1VVRX5fJ50Ok00GiUSiVBXV0c6naapqQmTycQL
      L7xAd3c34XAYm82G2+3GbrdTW1tLfX09mUyG1tbWkg7EO8W+4QJd/mKck23VDE4FmFyMcLy1
      iuYaFwadBu0WeTB7gXw+z6effkptbS0+n49YLFZgfZoFMqkk8XyeZDLJxMQEL774ovLlvnKi
      kfdujnCyrbrkgPImr4t3rw8TSWQ40lTJuzeG6Rn187//5BzzwTjprIDFWNrBMpMTUKtUK3Yp
      l8tFLBZDpVLR3t7OwsICZWVlyiIYml7mzvACeUHkBy8dwv5I9jadTsebb7654h5Fa8zx44Wy
      u0V7/ePFAEu1Au0m9o0KZDXqmFuOE45nMOkLXI7iwD4NXXCnKGYjU6lUhEIhhoeHKSsr4+bN
      m7S2thKLxZRyqY/CV2HnXx/Jz18KznX6iCYzmA06/nhlgDfOtpLNC0qE1KPJXzfC5GKE670z
      iJLEt59ro+yh6lRbW7vCtF1buzLwZGAywHefb2V8PsLEfHiFdWgrkGWYWYoiStKWzhm7iS0t
      ACGXZmYhSLndSFLUUFW+W4GRcOFYA30TS5ztrMHjtu5au08TDocDg8HAF198QXV1NXfu3KGj
      owNBEGhsbFRSnayFeyOL9E0sKUmhNr2XpUBvNhv1zC7FyOREfvpKF1Zz6SbFvvElvn2ulWAs
      xdD08opi0hvhue5a/nR1CL1Oww/OH1r1uSwXAmQyOYFm7/pzZHQuyIPpIAadhlgyS1fD0yfv
      bckRNjk6SBYTBr0alSwr5K6NqBA9PT1YLBbm5+epqqqirKyMpaUlRkZGaGtrw+FwUF5ezq1b
      t2htbWV+fh6NRkMmk8FgMCCKYiGJqVbL4uIiDocDh8PB3Nwc3d3dq/q4VSpEXpD4261RUpk8
      Lx+rp7rMuqZcqe1tV+5XH/Tx80vd/P6TQb7/YjsadWlOprwg0jcRoKbcRqVr7aCZ9e4bjmd4
      /9YoGo2Kf3mhHaP+q9Kjm5lYN5Kb9sf4cnQBu9mA3WLkeEvlms/y+YN5LEY9JqOWqcUoLx2p
      3dYYBgKBbVMhtrQD2GwOYgtLyBYLMqVlhTAajczOzlJfX4/f71fyvre3t7O4uEh/fz8XL17E
      5/MRCoW4f/8+9fX15PN5JctyNBrFYDCgUqm4e/cuFRUVLCwsrJkoaiveRFGC/+cvdxAlmZeO
      1nOjf5afvtq9Su5peILLHBbevz2OTqsppGMv0RMMcKqjZtPM2clMHqtJu6LiS4XLyv9449gK
      2d3IChFL56ivclHptPBgenndqL8znT4+vjtJXpS4dLIRFfK2xnC9rBCbfSeyLD95KsTAwABm
      s5lgMKik/WtublYKGWs0GhwOBz09PbhcLsrKyhTyVyKRQJIkYrEYLpcLp9NJPB7HZDKh1+ux
      2+3bpmEIgsBMIM7YXJiZpRijcyF++NKhVSGPT2sByLJMNJnFbjagVqt2NS3Kjb4Z5pdjZPIi
      P3t1Y7r0biwASZL55N4kH9wZ57lOH5dONWIybK6aPW0qxOhcaO9jgveyTKpKreYv14aIJrO8
      dLSepjX01Z1M7Gg0ikaj4cGDB6jVapxOJ2q1mlAoRGNjI7Ozs2QyGaqrq+nv76exsRGdToff
      71d2xMXFRerr66mrq+P+/ftUVVWxsLBAMBjkrbfeUsZ/o7F55/J9fvJKJx/dneR4a/WmqtJu
      5AXqGV0kJ4iUO8yMzoV47dTm0WKPj+FytFC5vrOhYkWdhN1aAAvB+N76AZ5URJgsF0hX4/Ph
      DWMONGo1P3jpEP/bm8fWnPw7RTqdVgpMyLLMxMQEdrsdSZK4e/cu2WyWO3fu0Nvbi9/vx+Fw
      MDExQSqVYnx8nPHxcc6cOcPAwADRaJRAIMDk5CQOh4OGhoaSx+7MoRp+/UEfgihRsUZalycB
      m9nAYjDBtD+2wkz6OGRZ5r2bI/zXP+8zsRBR/p5M5/jbZyMIosTfN/Ck7wRVbtuzHREmSjJX
      7k0iiBKvnmhUtvbBqQDT/igqFaSy+XVZptuFJMkkMjlsJv2Gk9Bms3H//n3cbjc6nY6Ghgas
      VivNzc0kk0k0Gg1dXV34/X7Onj2LXq/nyJEjaDQaYrEYnZ2dyhmpp6eHs2fPbqukVKuvjMYq
      x1O1sTdWu5QyTs3e9U2cS5EkOq2aX7x2mHc+6KW1tmAJSucEHBYjzV43Q9PBHfUln89z584d
      jhw5QjAYRBAEbDYbdrv92VaBbg3MYjLoMBm0zAXivHy8AUEQuDU4j9tuQq1SsRROcv7oSh69
      LMvcHpxlMZTi4snGDdmIjz+LJMn88coAep0Gk0HH6w8DwUt5ZlGUiKcyOKymXUtm++c//5n6
      +noGBgaoq6tTDoRer5cvv/yShoYGpqamlAVVVJeKdQjC4TAvvvgif/3rX+nq6mJwcJAf/OAH
      6PUb6+y7lRpRECV+/WEfVpOOCoeZFx9JYHt3eIFpf5SLJxtXlEraqgqUTCb55JNPqK6uZm5u
      DqfTSTAY5NVXX90/jrDtwGk1MjYfRq/VrMjYdq7Lx0d3J5FlmYsnG4HCpL8zvMBcIEZXQyWB
      SIqXjtbx91ujW3JEZXJCodzOC+28c7m35OtEUeJ3H/cX6pQ5zLx8rKHkazdCTU0Nvb29OBwO
      amtr+eyzz9BqtRw7dgy73U4gEFCCyEVRVBLQOhwORFHE5XKRy+XweDyo1Wq6u7t3pWjhRsjl
      cmi1WpaWlnC73fz4QgeJVBatSiQajWIymcjlcnQ3lNFVX4idTiQSWCwWZmZm0Ol0Sp+LIaSb
      wWg0olarqa2txe12o1ar0el0e7sDlFooe70dQJZhcjGMKMo017iUlINrtbcUTnJ7cI4Xj9Tx
      +08GMOk1HKqvYDma4luP1ZeVZVgMxQlG07TVutA/skPJssyVe1PMBmIcbvZw9GF6v82eORLP
      cK13mjfONPGbjwboaqygfyJAbaWdl47Wb9ucm06nEUWRZDKJ0WhEp9MhyzJms1mpmCmKIsvL
      y1RXVysH3CIPJx6PU1FRweLiIuXl5UoyqSeZHLe/v1/peyQSobm5meXlTq6ypgAAF01JREFU
      ZUKhEBUVFRgMBkZGRmhqaiKTySCKItPT0/zkJz/ho48+wmg0Mjo6SltbGz6fj/fffx+fz8db
      b7215THcN1ygrSCVzfPnqw8QHxbDLnpFN4LJoCWcyDA2H8ZXYedYcyXBWGZN60QwluLTnima
      vC4+7Znm0iMyKpVqzbpVm8FhNaDXafjVB32cOeTji6F5fvHaYf5wZZBsXtx2PIROp8NoNCrx
      yo/iUTXGaDSumAyVlYVzkclUoD8Uy7nupBhgqVhYWMBqtRIOh3G73fT09NDW1oZOpyMSiRR0
      84dqWlNTE/fv38doNOL3+6mrq0OWZaXkVSgUUs5N28GWd4B0Oo1WDTlJjcVk2NUdIJXJ8+Hd
      ccrsZp7r8ilvxcd3gCv3pmisdmIx6bg1MPf/t3emX21dabr/SefoaJ4QQggEiBlj4wlXHE9J
      VeKkUp2qTlWvqtXj/XD/gv6jum9/uHWrumql07eSdDpOuZ3YMbaxAWObGYEZhOaJI+mc0x+w
      FAYJhI1tkuZZi7UEvDp777PPPnt4n/d5K8rwbUdJvHUlmuFY0IumVnc0za8keDS/xumuRr4e
      DfHLK317tmW/x6WffjtJTi6iqCq/euvYjly/36cEGbXU8WX6Ul5ZSGQ+l2J4ZAJ/vZO8Ct2d
      HeUkF5tR6W+VUMoPULL9/PYU5/ubeTgXZvpplHa/e8v1Sp3c11rHp99OodfruHKydYe2Zjqd
      5saNG/h8PgqFAq2trej1euLxOAGvl7t3hhgYGODWrVs4HA4SiQQXL14EoFBUcdmMOCwSN8dC
      vHOmraa21Nrmkt3VwXbSuTxWswSahrrtPbSf69UiMrzf6+1lW2tijkplq6rGtftzFAoK7w5+
      d3q333u4uS6ln93sKmFfA2B1ZZWCnEUu2kF38C4Ep83E5GKU1ViG48HqR5epbJ5TXY10BzyY
      pJ1vKovFQnNzM6lUCoPBwMjICJ2dnXzxxRdcuXKFWCxGsVgkGo3S29tbXirk5AK/vTaOzSzR
      7nfx84s9L8xE/eyzz3C73czNzeH3+7l79y69vb0kk0kuXLjA19dHMZvN2Gw2VlZWOH36NEND
      QzvWs4cNL3J4cefJEg0uCzazxPUH8zs0/F9lXfY1AALBThoDbaAqFDRd+RTneTPFl5Y1Jdu3
      TrXxZCFCV8BDg9uGpmmMzqzithkJNDjR6XQ8Dq0xvRjDbDQwPr/GYM9W6kKp7NLZezqdpru7
      m2g0yrvvvks8Hi8/8KUEyiUP7XI0Q0+Lh8FeP3+8/pjB3qYXJrk1NTVx//59PB4PXq8Xr9dL
      Pp8nnU4zNzdHJBJhYGCAxcVF8vk8MzMzxONxEokE9fV7syNLM+PzZIqvZgd7L232swTaXnad
      w8Kj+TAmScTrtJb/97z3uvQMPc9zeKhPgf7jzjTuZ7PCO2fb8bqsDD1+iqDXYTNL5bP/5ym7
      kp2iqnz89RPS2Xw5PeeLrl8LhQKFQqGc5zedTuPxeMpHeZIkkU6nEQShnM/YbDZTKBRqSuV6
      UHuASCK7wQzV6/joci+WPQJqXmQPUIoDKCoq7f7v1O5e9R5ALhQP9ylQJpfnRHsDkWSOnLwR
      I9vf5uWr4VlEUdiZ/kZV+XxoGnR63jvXsW+NTEGv55eX997w7gcGgwGDwVAOhLHZbFvyYAFb
      Oq7kFHzZZ/Hb8fVoiF9c7GE1nuHB9Cpv9gf2/tJzQqdji+jW60AyI/OH/3p0uB1h7/+ok/+8
      O0u900TAa2cllubz29MIeh1vHg/seMBvji0QbHRjMAj818h8RWfT8PAwqqqytLREQ0MDqVSK
      jo4OvvrqK44fP04kEsFkMtHS0oLFYkGSJG7fvk1PTw9Pnz4ll8shSRJvvfXWQd+OV4JIMse1
      e7N0NLk40/3d8vF4RwOffLPBvfn5xe5drvDDQGg1wYn2hsPBBVJVjZGZVdy2jSwspTFhNhr4
      8EJ3OehmIhTl0kArDovErfHF8ilRCR6nhcmFCIKgp7Wh8humWCyWE2fLskw4HEbTNKxWKz6f
      D7fbzd27d0mn09TV1dHe3o7D4WBqaqq8fxBF8VBmbK8Fn347yUeXe/ns9hTtfjcu24YPpcPv
      psljRweIwqtvl6Zp/Ns3E6RyBd7sb6Y74Hmp5fW0ePi3r58cjiXQV/dnsZuN3H70FIOox++p
      LL9xrq9pIx+vukF++z+fj6BucobpdTpEQU9fm5e2KlPsqVOnyGQyuN1uzGYzb775JoqikEwm
      8Xg8qKpKW1sbiqIQj8fxeDxIkoTVunWz9n2FzSzxaG6NVCaPcZtci0kSX4kjrBJWYhksRgMf
      Xe7jX/5j5MAGQKFQIJvNYjKZSKfT5PP5MhXip+faDscSKJMr0BPwkMisl9f6lWCSRP76nY10
      rdeGZ3nrVCsWk4GvR0O0+Zw8jaQxCHriqfWqQdaCIPLF/SUyOZkrp9po97sRRRGvd0N3qPSQ
      i6KIz+crzxi1QFFUklkZl810aGeHD9/s5nEowl9e7sVs3J2E+CpR77SwEsvwu6/GD/Ttv7Cw
      wMzMDLAx+7vdbubn53E6nWQymcOxBLp6roNr92bxOMy0+ys/uDm5gKpRZm4eDzbw/29NoNPp
      eOdMkIVwkgaXBb0O4pnqujih1QRel4WfX+ji939+tGMZtRvG58KMzYS5cDxAs3erVpGqavzu
      +kPsZgnJIJRZoocJt27dwul04vN6iYWXMIl+FEWpmoDvVUIU9Pz1T/opamA+QJlMg8GA1+sl
      EomUnaHNzc2Ew+H9DwC1mCeazOKwSMiKDrv1xRTISlOtSTLwwS7J08KJLJ8PTWMQBH7U10Rn
      cx1el4W/efcEmqZhNIj4PXauP5ijWFT48dn2quXNrSS4dm+WhdUEx3Zxtm2HnC8yPLnCry73
      8duvHvK/3t+q1V/Ku/vhhe59sURfJZaWljZ8K6OjdHV1YbPZKBQKL30AyLLM0NBQ2f+xsLCA
      z+ejpaWF8fFxPvjgA1ZWVsrOydXVVYLBYDkPQykHg8vlwmKxkEgkOHv2bE1lBwKBHfpDm7Gv
      AbAuy0SXl4mZJVA1bB0bVIjt3tJKf6uE0gDYy3ZyIcqF/gAum4mbDxcINm6s7wUdoNOVv395
      oGVjfb6t/MehKDodOK1G0lmZf/z1G3z89RNOdnirll1UNf54/RFZucBPzrTj99jIF4o8nAsj
      ifod37MYDbisEv/06X0Ge/1Vr7ufe1OrXa20E6fTic1m4+zZs9hsNoaGhnj77be3lFNrn5Ts
      atkvSJLE/Pw8ZrOZ+vp6TCZTmZN/8uRJXC4XY2Nj+P1+ZFkmkUigKMpGCqNnGTWHh4fp7+9n
      eXmZVCq1JcFIiQbxPM/hvhxh4afzRLMKIkUKqo7e7s4yUW0zKjnHKqFahpiFcJJr92YxSiK/
      utJHUVH4+OuNI7pfXOzZNYBle9n3p1aIp+VnM4XA5GKU7kAdqWye98517Ch3NZbhdHcjk4vR
      slbNJ99M8esfHyMnF5lbSdDV7N5xBFtrmw+7XYkLtJeDq1b5lFLZpQdRr9eXVT4MBkOZel3K
      GV0i4imKQjqdxm63o3v2kisxB0p51kqoJotSS5v3NQAKeZn1fAGz0YiCDqNBfCkRYb+99pBf
      XOxhdHoVm1miO+BGr9c/Y09q2HcRfyqVXVRUPrs9xb2JZT661Iv6TBqkt8XDWiJLe6MTw6ZE
      zWuJLP95d4ZjbfUshlO8fbqN3157iKjXcaqrkeN7hFW+zoQbR2zQV8QGNUhGDJJx/1+sgmqO
      sONBL/96/RGFosJvnkVrLUfTfHFnBlHQl/cBu+HGaIjeFg+9rR5+d22c8/3NXDnZhl6vo85h
      3qG+nC8oWE0SXqeVqWdco7+7OkA+X8Bi3klJGJ1ZZXw2zIUTLQS83y/xXk3TiKXWsVskDDXq
      kf5QcShOgbajP+ils8mNIOg3VJMVhanFKBdPtOC0Grk1vrjnAPC5rYzNhtEBf3m5d8+cuX6P
      jdWYnXuTS+UNuSjooYK0eU4uMDazykeX+/h/1x7yD+9Xzg5/WHHt3iwZuUAsmeNv3j3xXINA
      1TTuT67gtptp97srJub7PuBQOMI2I7S6cUojGUT+6q3veDnn+pr4+MaTZ676vdMp9bbUYzdL
      aFCTvLpOp+N0dyOn2Vvo1SAKyAWFkemVV5LZJp3LMzyxzECnD6d1b4LcXlhcS/F37w3wp1uT
      JDMynhrFdDfj+oN5HBYjI9MrGEQ9LVU874cdh04X6ObDRX7zk+N0NbuZXIyW/240iPzmJ8f5
      26sDu+4BAEKhEPF4jPH736JkYywshA603qKg59dv92MxGtDrdfzTZw+4N7F8oGVsxr/+eZyA
      18Efro/vCJx5HlwaaOFfPh9BMgjPnUwjJxfxOCzYLUbkwuFX766GQ5Mgo4SB9gZ+/+dxxmbD
      ZW9uPL2OnK/sIS4qKv9+c4KPbzymUNzoiGQyidFoJJPJsLCwQDgcPvB6GiWB24+e8nh+DY/D
      zONQdO8vPSdUTcPteBb3fAAshXa/m394/yRXBzue22P97tkgT0JrOKzGXRWgDzsO3RKor62e
      jqYNUSVB0DP06Cmh1QSJjMyvf9y/4wj01sMFuprrUDWNL+/N8s6ZNqxWK1NTU/h8Prq7u1lc
      XNyzHtcfzLMay/D+jzpx1LDMWM8r2MwSvS313BgJcXUwuK+27wcfnO/mq+E53jvXif4lJQuR
      ZRlZlslms0xMTDA4OMjw8DADAwMsLy+XM6yHQiFUVcXlcvHj023Mzs4yNDREa2sroigyOjpK
      MBhkamqKM2fOlAWRY7EY7e3taJpWpp0cBrx2LpAGDD16itthpuPZZmpztpKZpRgfvtnF8NQK
      y5E0XYGtm19fnY1vxhb49uECx4JeuprddASDW2w8nt25JaFwkkJR4advdPKnb6fKJ0+7wWIU
      afTYmFmK8/fvDdATeLG3oKZpyLJMsVgkHo/jcrnKrFM5FeFSXz1ut5V4PF4+Q9c0rSyVWFJ5
      eF6sr68Tj8cZGxvj/PnziKJIKpXiyZMnPHjwgBMnTjA6Osrg4CCCIPDll19SLBYJh8PkcjmS
      ySQAi4uLCIJANBplcnKSu3fv0tPTQzKZJJPJUCwWuXr16gvV9SDx2meAL+/N0uhxMDq9gtEg
      7DhSfPtMkN9ff4TTZuJ8hSCNzqY6Jhei/O+/OEPA6+DexBIdTRuDJJmR+cP1R6CDX17uq/pm
      d1qNLK6luPtkaUd2lampKURRJJvN0tjYiM1mK4faBewqZzu7WFhYYHo6xvr6Op2dnSwtLdHc
      vJHsriQ7shdUVWV2dpZkMomqqqyurmIymVBVlYmJCQKBQNnra7VaaWxs3BD7unOHwcHBFx4A
      FouF27dv09/fz4MHDxgcHMRoNGI0GnnnnXdQFAWDwYDdbqdQKHDp0iUA6urqSCaTNDY2oqoq
      3d3d5HK5MgPzZz/7GdlslmAwWPYdHCYq+XOFRM5OPSFb1NPf2/XCjrA/fTvFqS4/T0IRugJ1
      Fclpe6lDy/kif7zxGFXV+PmFLmyWjfXyp99OcrbHj6bBvYllfvrGdwS1zXXUNEhk1omlcgQb
      XVvKmZycRFEUbt68yRtvvMHs7CxNTU3l/126dIlkMoksy9y/f5+Ojg46Ozu5desWoijWLNak
      KAqffPLJRl6xZypouVyOtrY2lpaWqKurY25ujt7eXtbWNjT3I5EImqbR399Pa2vrrvf6yBFW
      Gc81AObm59BUjdbW1o1EE88CVjbLnJROeDb/DltHf6FQQNHgzsQaTquBE0Ev8J0rvpLch16v
      33LzS59L7vOSm1xRFGJpmX+/OYGmwYcXuql3WipyQ0rf3XzNUt1XV1dRVZWhoSHa29spFosk
      EomyTUtLC1arlXw+z8jICMFgkEQigc/nQ1VVurq6ttALSvdqc/u2fy7xWgwGw472bf9crR3b
      P+fzeQRB2NG+7Z+3PBxVbHQ6Xbm+giBUbcdmyZbS77v1X6FQQK/X79qO7X0MEIlEypyhzf1Y
      KBQQRbFqG3Q63fMNgEwySrYo4K1z1jQDZLPZcuVVVSWfz2M0GgmFQvh8PpaWlspCrX6/n5WV
      FYLP1vGJRIKlpaWa1b+2l11K5bmdu/M6qQtHVIiDtXtlVIgSrI469kOgDYVC5cwu2WyW5eVl
      rFYrFouFaDTK9PQ07e3tzM3NsbCwQDweR5ZlDAYDXV1dzM3N7WvNuLi4SF1dHQ8fPiSTyRAM
      BmlqauKbb77hypUr+2/wEX6weCV+gEAgQDabJZFIEIvF6OvrI5vNlmNs3W43drud7u5unE4n
      DocDk8lEOBwu60fuZwBkMhkikQjz8/OcO3eOVCrFo0ePePz48fci5eoRXh1ee36AagnUtpex
      nxRJAHfu3OH06dOMjIxgNBqxWq34/X4EQUCSpO/F0uZoCVSbXbUlUC106NdOhnsZAdiiKHL+
      /HkAzp07d+DXP8Lhg6qqLC4u4vf7mZ+fL9PsSyd21fBaqRC1vtWPcIS9oNPpsFqtLC0tkU6n
      icfjNb1cX+sAeF0SHEf44UFVVWZmZsjlciQSCex2O+l0es/vvfYl0BGOcBAQBIEzZ84A0NW1
      Ec9Ry4HHC2+CKwVl16ryW2tc6X5c5y+q5vw/3W4/fVKL3cuo43a7anWp5XovPANUCmqvJJle
      CS/jZtda9g/JrhZ59KM+qWLzojPAEY7wfcaB7wEyyTgr0RQU0qxrEv091RTSVMZHR5BsHjqD
      1YWLVmaeoPP4WZ6ewtXQRGtTZdZjbG2F2cUwFgl0ko2ezmBFu2wqztjYY1wNHnK5IiePV5ZD
      V4oyN28P09zgJp2HE8d6KtrlM0nGJmbxuOzEEin6TgxgrCAum01GmFpYw2WViCbS9J84gaEC
      t18tyjwZHyOnGdEV12nvP4XTVLmbRu/fxWC2kE3laAi00uzbSfvWVIWRB/ex2G2k4xl8be34
      63eq7yWjy8RyetYTKyCakHMp6nxtBBq3XjO+tkCyaEXNreJy+pgLTeP1d9DUsPWauXSSxXAM
      l8XAYjiJxDqSrX5HXyv5dR7PhGj11TE6MYvXZWVdEejv62bz3SnKWZ7MPaW3zc+t4cf43Gby
      SBzb9nwV1jNMhVawGFQKOhPaeoKi3kJf91axNDmbZnYpfLCnQPG1VZAsWIwigmTBIu12eQ2L
      zY2e3TcqdZ569BRw1DWiFuSqdjqdnrZgGyaLvVIcexmiwYDFbKSgGbDvEviyND9HvpgnjwGr
      eRcNTT0IapG1ZA5vnYNq0YH59Szr6SQriXU8LjtKFS0rvWjE7vbS7HXR7Ksnl68ueqXX69EU
      Gbe3mYK8XtlIp6e+zkUiHqWuwU8hX/keOlx1SKIek8WJoBZx13tR8jslJl1uDwa9jjpPPVqh
      iKfBR7GCndnmwGqS0OkF2tpasNhdCBX6WpBMuB02RIMBk2REJ5qwVtAsFY0W3HYrc3PzFOUc
      GCyYK3S0wWTFaTNjNpmIrK0hmqyYxJ0vGqPFhsNiOtgZwFXfQDK2RjKdxVfvRtHvFrsrYLca
      kWy7B5KsJVMUdEbMBgWXt7pTQ1GKxJIxvE4LGCurS8PGxsjsqqfJ6yCZq/5wBTp68PhbQMmT
      zldf54qSGafHg7/Rx1osiVWqbOv0NuOXwev1EE1kMVbolBLqPPWYTBKLi8s026sPvoaGBgSL
      i/VkhHp/5VlUB+j0IscHzhELL+NtbK5oF41EyWRkPE4zgreBXDKC2+fbYRdZi5HNKii5Ajqj
      HUHT8Pl3Km5kElGSqQx2qxE5F8dpMSHZdip5FOUsqWQSQRBwezx4nWZyisD2u1PIpUkmkwTa
      uvC3FFHyOfLsfL7kbIpkMoXX66G5uRmHUYci7gz6z6UTJFPpoz3AEf5n49AFxR/hCK8SRwPg
      CD8YqEqebO67PU46lWIv2eCjJdARvjfQVIXf/d9/pqH1OD6XCZ8/wHI4QmxtlWP9x4ikZPyN
      9dy5cQ3R7OZkt4/ZqMbxruqnjP8NXjxLzBQclhcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
